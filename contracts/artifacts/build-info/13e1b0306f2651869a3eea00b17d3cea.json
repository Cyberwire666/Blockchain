{
	"id": "13e1b0306f2651869a3eea00b17d3cea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenVesting.sol": {
				"content": "/* solium-disable security/no-block-members */\n\npragma solidity ^0.4.24;\n\nimport \"./ownership/Ownable.sol\";\nimport \"./math/SafeMath.sol\";\nimport \"./token/SafeERC20.sol\";\nimport \"./token/IERC20.sol\"; \n\n/**\n * @title TokenVesting\n * @dev A token holder contract that can release its token balance gradually like a\n * typical vesting scheme, with a cliff and vesting period. Optionally revocable by the\n * owner.\n */\ncontract TokenVesting is Ownable {\n  using SafeMath for uint256;\n  using SafeERC20 for IERC20;\n\n  event TokensReleased(address token, uint256 amount);\n  event TokenVestingRevoked(address token);\n\n  // beneficiary of tokens after they are released\n  address private _beneficiary;\n\n  uint256 private _cliff;\n  uint256 private _start;\n  uint256 private _duration;\n\n  bool private _revocable;\n\n  mapping (address => uint256) private _released;\n  mapping (address => bool) private _revoked;\n\n  /**\n   * @dev Creates a vesting contract that vests its balance of any ERC20 token to the\n   * beneficiary, gradually in a linear fashion until start + duration. By then all\n   * of the balance will have vested.\n   * @param beneficiary address of the beneficiary to whom vested tokens are transferred\n   * @param cliffDuration duration in seconds of the cliff in which tokens will begin to vest\n   * @param start the time (as Unix time) at which point vesting starts\n   * @param duration duration in seconds of the period in which the tokens will vest\n   * @param revocable whether the vesting is revocable or not\n   */\n  constructor(\n    address beneficiary,\n    uint256 start,\n    uint256 cliffDuration,\n    uint256 duration,\n    bool revocable\n  )\n    public\n  {\n    require(beneficiary != address(0));\n    require(cliffDuration <= duration);\n    require(duration > 0);\n    require(start.add(duration) > block.timestamp);\n\n    _beneficiary = beneficiary;\n    _revocable = revocable;\n    _duration = duration;\n    _cliff = start.add(cliffDuration);\n    _start = start;\n  }\n\n  /**\n   * @return the beneficiary of the tokens.\n   */\n  function beneficiary() public view returns(address) {\n    return _beneficiary;\n  }\n\n  /**\n   * @return the cliff time of the token vesting.\n   */\n  function cliff() public view returns(uint256) {\n    return _cliff;\n  }\n\n  /**\n   * @return the start time of the token vesting.\n   */\n  function start() public view returns(uint256) {\n    return _start;\n  }\n\n  /**\n   * @return the duration of the token vesting.\n   */\n  function duration() public view returns(uint256) {\n    return _duration;\n  }\n\n  /**\n   * @return true if the vesting is revocable.\n   */\n  function revocable() public view returns(bool) {\n    return _revocable;\n  }\n\n  /**\n   * @return the amount of the token released.\n   */\n  function released(address token) public view returns(uint256) {\n    return _released[token];\n  }\n\n  /**\n   * @return true if the token is revoked.\n   */\n  function revoked(address token) public view returns(bool) {\n    return _revoked[token];\n  }\n\n  /**\n   * @notice Transfers vested tokens to beneficiary.\n   * @param token ERC20 token which is being vested\n   */\n  function release(IERC20 token) public {\n    uint256 unreleased = _releasableAmount(token);\n\n    require(unreleased > 0);\n\n    _released[token] = _released[token].add(unreleased);\n\n    token.safeTransfer(_beneficiary, unreleased);\n\n    emit TokensReleased(token, unreleased);\n  }\n\n  /**\n   * @notice Allows the owner to revoke the vesting. Tokens already vested\n   * remain in the contract, the rest are returned to the owner.\n   * @param token ERC20 token which is being vested\n   */\n  function revoke(IERC20 token) public onlyOwner {\n    require(_revocable);\n    require(!_revoked[token]);\n\n    uint256 balance = token.balanceOf(address(this));\n\n    uint256 unreleased = _releasableAmount(token);\n    uint256 refund = balance.sub(unreleased);\n\n    _revoked[token] = true;\n\n    token.safeTransfer(owner(), refund);\n\n    emit TokenVestingRevoked(token);\n  }\n\n  /**\n   * @dev Calculates the amount that has already vested but hasn't been released yet.\n   * @param token ERC20 token which is being vested\n   */\n  function _releasableAmount(IERC20 token) private view returns (uint256) {\n    return _vestedAmount(token).sub(_released[token]);\n  }\n\n  /**\n   * @dev Calculates the amount that has already vested.\n   * @param token ERC20 token which is being vested\n   */\n  function _vestedAmount(IERC20 token) private view returns (uint256) {\n    uint256 currentBalance = token.balanceOf(this);\n    uint256 totalBalance = currentBalance.add(_released[token]);\n\n    if (block.timestamp < _cliff) {\n      return 0;\n    } else if (block.timestamp >= _start.add(_duration) || _revoked[token]) {\n      return totalBalance;\n    } else {\n      return totalBalance.mul(block.timestamp.sub(_start)).div(_duration);\n    }\n  }\n}\n"
			},
			"contracts/token/IERC20.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    \r\n    function balanceOf(address account) external view returns (uint256);\r\n    \r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    \r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    \r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    \r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"contracts/token/SafeERC20.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"../math/SafeMath.sol\";\r\n\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        require(token.transfer(to, value), \"SafeERC20: transfer failed\");\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        require(token.transferFrom(from, to, value), \"SafeERC20: transferFrom failed\");\r\n    }\r\n\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        require(token.approve(spender, value), \"SafeERC20: approve failed\");\r\n    }\r\n}\r\n"
			},
			"contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n}\r\n"
			},
			"contracts/ownership/Ownable.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() public {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/TokenVesting.sol": {
				"TokenVesting": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "cliff",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "revocable",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								}
							],
							"name": "revoked",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "beneficiary",
									"type": "address"
								},
								{
									"name": "start",
									"type": "uint256"
								},
								{
									"name": "cliffDuration",
									"type": "uint256"
								},
								{
									"name": "duration",
									"type": "uint256"
								},
								{
									"name": "revocable",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenVestingRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"beneficiary()": {
								"return": "the beneficiary of the tokens."
							},
							"cliff()": {
								"return": "the cliff time of the token vesting."
							},
							"duration()": {
								"return": "the duration of the token vesting."
							},
							"release(address)": {
								"params": {
									"token": "ERC20 token which is being vested"
								}
							},
							"released(address)": {
								"return": "the amount of the token released."
							},
							"revocable()": {
								"return": "true if the vesting is revocable."
							},
							"revoke(address)": {
								"params": {
									"token": "ERC20 token which is being vested"
								}
							},
							"revoked(address)": {
								"return": "true if the token is revoked."
							},
							"start()": {
								"return": "the start time of the token vesting."
							}
						},
						"title": "TokenVesting"
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenVesting.sol\":414:4810  contract TokenVesting is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TokenVesting.sol\":1525:1977  constructor(... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/TokenVesting.sol\":1525:1977  constructor(... */\n  pop\n  mload(0x40)\n  0xa0\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/ownership/Ownable.sol\":216:226  msg.sender */\n  caller\n    /* \"contracts/ownership/Ownable.sol\":207:213  _owner */\n  0x0\n  dup1\n    /* \"contracts/ownership/Ownable.sol\":207:226  _owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ownership/Ownable.sol\":275:281  _owner */\n  0x0\n  dup1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownership/Ownable.sol\":242:282  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownership/Ownable.sol\":271:272  0 */\n  0x0\n    /* \"contracts/ownership/Ownable.sol\":242:282  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/TokenVesting.sol\":1704:1705  0 */\n  0x0\n    /* \"contracts/TokenVesting.sol\":1681:1706  beneficiary != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TokenVesting.sol\":1681:1692  beneficiary */\n  dup6\n    /* \"contracts/TokenVesting.sol\":1681:1706  beneficiary != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/TokenVesting.sol\":1673:1707  require(beneficiary != address(0)) */\n  iszero\n  iszero\n  tag_6\n  jumpi\n  0x0\n  dup1\n  revert\ntag_6:\n    /* \"contracts/TokenVesting.sol\":1738:1746  duration */\n  dup2\n    /* \"contracts/TokenVesting.sol\":1721:1734  cliffDuration */\n  dup4\n    /* \"contracts/TokenVesting.sol\":1721:1746  cliffDuration <= duration */\n  gt\n  iszero\n    /* \"contracts/TokenVesting.sol\":1713:1747  require(cliffDuration <= duration) */\n  iszero\n  iszero\n  tag_7\n  jumpi\n  0x0\n  dup1\n  revert\ntag_7:\n    /* \"contracts/TokenVesting.sol\":1772:1773  0 */\n  0x0\n    /* \"contracts/TokenVesting.sol\":1761:1769  duration */\n  dup3\n    /* \"contracts/TokenVesting.sol\":1761:1773  duration > 0 */\n  gt\n    /* \"contracts/TokenVesting.sol\":1753:1774  require(duration > 0) */\n  iszero\n  iszero\n  tag_8\n  jumpi\n  0x0\n  dup1\n  revert\ntag_8:\n    /* \"contracts/TokenVesting.sol\":1810:1825  block.timestamp */\n  timestamp\n    /* \"contracts/TokenVesting.sol\":1788:1807  start.add(duration) */\n  tag_9\n    /* \"contracts/TokenVesting.sol\":1798:1806  duration */\n  dup4\n    /* \"contracts/TokenVesting.sol\":1788:1793  start */\n  dup7\n    /* \"contracts/TokenVesting.sol\":1788:1797  start.add */\n  or(tag_0_61, mul(0x100000000, tag_10))\n  swap1\n    /* \"contracts/TokenVesting.sol\":1788:1807  start.add(duration) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_9:\n    /* \"contracts/TokenVesting.sol\":1788:1825  start.add(duration) > block.timestamp */\n  gt\n    /* \"contracts/TokenVesting.sol\":1780:1826  require(start.add(duration) > block.timestamp) */\n  iszero\n  iszero\n  tag_11\n  jumpi\n  0x0\n  dup1\n  revert\ntag_11:\n    /* \"contracts/TokenVesting.sol\":1848:1859  beneficiary */\n  dup5\n    /* \"contracts/TokenVesting.sol\":1833:1845  _beneficiary */\n  0x1\n  0x0\n    /* \"contracts/TokenVesting.sol\":1833:1859  _beneficiary = beneficiary */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenVesting.sol\":1878:1887  revocable */\n  dup1\n    /* \"contracts/TokenVesting.sol\":1865:1875  _revocable */\n  0x5\n  0x0\n    /* \"contracts/TokenVesting.sol\":1865:1887  _revocable = revocable */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenVesting.sol\":1905:1913  duration */\n  dup2\n    /* \"contracts/TokenVesting.sol\":1893:1902  _duration */\n  0x4\n    /* \"contracts/TokenVesting.sol\":1893:1913  _duration = duration */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenVesting.sol\":1928:1952  start.add(cliffDuration) */\n  tag_12\n    /* \"contracts/TokenVesting.sol\":1938:1951  cliffDuration */\n  dup4\n    /* \"contracts/TokenVesting.sol\":1928:1933  start */\n  dup6\n    /* \"contracts/TokenVesting.sol\":1928:1937  start.add */\n  or(tag_0_61, mul(0x100000000, tag_10))\n  swap1\n    /* \"contracts/TokenVesting.sol\":1928:1952  start.add(cliffDuration) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_12:\n    /* \"contracts/TokenVesting.sol\":1919:1925  _cliff */\n  0x2\n    /* \"contracts/TokenVesting.sol\":1919:1952  _cliff = start.add(cliffDuration) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenVesting.sol\":1967:1972  start */\n  dup4\n    /* \"contracts/TokenVesting.sol\":1958:1964  _start */\n  0x3\n    /* \"contracts/TokenVesting.sol\":1958:1972  _start = start */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TokenVesting.sol\":1525:1977  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/TokenVesting.sol\":414:4810  contract TokenVesting is Ownable {... */\n  jump(tag_13)\n    /* \"contracts/math/SafeMath.sol\":631:810  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_10:\n    /* \"contracts/math/SafeMath.sol\":689:696  uint256 */\n  0x0\n    /* \"contracts/math/SafeMath.sol\":709:718  uint256 c */\n  dup1\n    /* \"contracts/math/SafeMath.sol\":725:726  b */\n  dup3\n    /* \"contracts/math/SafeMath.sol\":721:722  a */\n  dup5\n    /* \"contracts/math/SafeMath.sol\":721:726  a + b */\n  add\n    /* \"contracts/math/SafeMath.sol\":709:726  uint256 c = a + b */\n  swap1\n  pop\n    /* \"contracts/math/SafeMath.sol\":750:751  a */\n  dup4\n    /* \"contracts/math/SafeMath.sol\":745:746  c */\n  dup2\n    /* \"contracts/math/SafeMath.sol\":745:751  c >= a */\n  lt\n  iszero\n    /* \"contracts/math/SafeMath.sol\":737:783  require(c >= a, \"SafeMath: addition overflow\") */\n  iszero\n  iszero\n  tag_15\n  jumpi\n  mload(0x40)\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x4\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/math/SafeMath.sol\":801:802  c */\n  dup1\n    /* \"contracts/math/SafeMath.sol\":794:802  return c */\n  swap2\n  pop\n    /* \"contracts/math/SafeMath.sol\":631:810  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TokenVesting.sol\":414:4810  contract TokenVesting is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenVesting.sol\":414:4810  contract TokenVesting is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0xfb5a6b4\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x13d033c0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x74a8f103\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x872a7810\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfa01dc06\n      eq\n      tag_14\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/TokenVesting.sol\":2455:2531  function duration() public view returns(uint256) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/TokenVesting.sol\":2455:2531  function duration() public view returns(uint256) {... */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenVesting.sol\":2185:2255  function cliff() public view returns(uint256) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"contracts/TokenVesting.sol\":2185:2255  function cliff() public view returns(uint256) {... */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenVesting.sol\":3099:3377  function release(IERC20 token) public {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/TokenVesting.sol\":3099:3377  function release(IERC20 token) public {... */\n      pop\n      tag_22\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_23)\n    tag_22:\n      stop\n        /* \"contracts/TokenVesting.sol\":2037:2119  function beneficiary() public view returns(address) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"contracts/TokenVesting.sol\":2037:2119  function beneficiary() public view returns(address) {... */\n      pop\n      tag_25\n      jump(tag_26)\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownership/Ownable.sol\":599:739  function renounceOwnership() public onlyOwner {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/ownership/Ownable.sol\":599:739  function renounceOwnership() public onlyOwner {\r... */\n      pop\n      tag_28\n      jump(tag_29)\n    tag_28:\n      stop\n        /* \"contracts/TokenVesting.sol\":3585:3955  function revoke(IERC20 token) public onlyOwner {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"contracts/TokenVesting.sol\":3585:3955  function revoke(IERC20 token) public onlyOwner {... */\n      pop\n      tag_31\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_32)\n    tag_31:\n      stop\n        /* \"contracts/TokenVesting.sol\":2594:2669  function revocable() public view returns(bool) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/TokenVesting.sol\":2594:2669  function revocable() public view returns(bool) {... */\n      pop\n      tag_34\n      jump(tag_35)\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownership/Ownable.sol\":298:377  function owner() public view returns (address) {\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/ownership/Ownable.sol\":298:377  function owner() public view returns (address) {\r... */\n      pop\n      tag_37\n      jump(tag_38)\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownership/Ownable.sol\":499:591  function isOwner() public view returns (bool) {\r... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_39:\n        /* \"contracts/ownership/Ownable.sol\":499:591  function isOwner() public view returns (bool) {\r... */\n      pop\n      tag_40\n      jump(tag_41)\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenVesting.sol\":2732:2828  function released(address token) public view returns(uint256) {... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"contracts/TokenVesting.sol\":2732:2828  function released(address token) public view returns(uint256) {... */\n      pop\n      tag_43\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_44)\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenVesting.sol\":2321:2391  function start() public view returns(uint256) {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n        /* \"contracts/TokenVesting.sol\":2321:2391  function start() public view returns(uint256) {... */\n      pop\n      tag_46\n      jump(tag_47)\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownership/Ownable.sol\":747:983  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"contracts/ownership/Ownable.sol\":747:983  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      tag_49\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_50)\n    tag_49:\n      stop\n        /* \"contracts/TokenVesting.sol\":2887:2978  function revoked(address token) public view returns(bool) {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"contracts/TokenVesting.sol\":2887:2978  function revoked(address token) public view returns(bool) {... */\n      pop\n      tag_52\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_53)\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenVesting.sol\":2455:2531  function duration() public view returns(uint256) {... */\n    tag_17:\n        /* \"contracts/TokenVesting.sol\":2495:2502  uint256 */\n      0x0\n        /* \"contracts/TokenVesting.sol\":2517:2526  _duration */\n      sload(0x4)\n        /* \"contracts/TokenVesting.sol\":2510:2526  return _duration */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":2455:2531  function duration() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":2185:2255  function cliff() public view returns(uint256) {... */\n    tag_20:\n        /* \"contracts/TokenVesting.sol\":2222:2229  uint256 */\n      0x0\n        /* \"contracts/TokenVesting.sol\":2244:2250  _cliff */\n      sload(0x2)\n        /* \"contracts/TokenVesting.sol\":2237:2250  return _cliff */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":2185:2255  function cliff() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":3099:3377  function release(IERC20 token) public {... */\n    tag_23:\n        /* \"contracts/TokenVesting.sol\":3143:3161  uint256 unreleased */\n      0x0\n        /* \"contracts/TokenVesting.sol\":3164:3188  _releasableAmount(token) */\n      tag_57\n        /* \"contracts/TokenVesting.sol\":3182:3187  token */\n      dup3\n        /* \"contracts/TokenVesting.sol\":3164:3181  _releasableAmount */\n      tag_58\n        /* \"contracts/TokenVesting.sol\":3164:3188  _releasableAmount(token) */\n      jump\t// in\n    tag_57:\n        /* \"contracts/TokenVesting.sol\":3143:3188  uint256 unreleased = _releasableAmount(token) */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":3216:3217  0 */\n      0x0\n        /* \"contracts/TokenVesting.sol\":3203:3213  unreleased */\n      dup2\n        /* \"contracts/TokenVesting.sol\":3203:3217  unreleased > 0 */\n      gt\n        /* \"contracts/TokenVesting.sol\":3195:3218  require(unreleased > 0) */\n      iszero\n      iszero\n      tag_59\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_59:\n        /* \"contracts/TokenVesting.sol\":3244:3276  _released[token].add(unreleased) */\n      tag_60\n        /* \"contracts/TokenVesting.sol\":3265:3275  unreleased */\n      dup2\n        /* \"contracts/TokenVesting.sol\":3244:3253  _released */\n      0x6\n        /* \"contracts/TokenVesting.sol\":3244:3260  _released[token] */\n      0x0\n        /* \"contracts/TokenVesting.sol\":3254:3259  token */\n      dup6\n        /* \"contracts/TokenVesting.sol\":3244:3260  _released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TokenVesting.sol\":3244:3264  _released[token].add */\n      tag_61\n      swap1\n        /* \"contracts/TokenVesting.sol\":3244:3276  _released[token].add(unreleased) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_60:\n        /* \"contracts/TokenVesting.sol\":3225:3234  _released */\n      0x6\n        /* \"contracts/TokenVesting.sol\":3225:3241  _released[token] */\n      0x0\n        /* \"contracts/TokenVesting.sol\":3235:3240  token */\n      dup5\n        /* \"contracts/TokenVesting.sol\":3225:3241  _released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TokenVesting.sol\":3225:3276  _released[token] = _released[token].add(unreleased) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenVesting.sol\":3283:3327  token.safeTransfer(_beneficiary, unreleased) */\n      tag_62\n        /* \"contracts/TokenVesting.sol\":3302:3314  _beneficiary */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenVesting.sol\":3316:3326  unreleased */\n      dup3\n        /* \"contracts/TokenVesting.sol\":3283:3288  token */\n      dup5\n        /* \"contracts/TokenVesting.sol\":3283:3301  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_63\n      swap1\n        /* \"contracts/TokenVesting.sol\":3283:3327  token.safeTransfer(_beneficiary, unreleased) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_62:\n        /* \"contracts/TokenVesting.sol\":3339:3372  TokensReleased(token, unreleased) */\n      0xc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179\n        /* \"contracts/TokenVesting.sol\":3354:3359  token */\n      dup3\n        /* \"contracts/TokenVesting.sol\":3361:3371  unreleased */\n      dup3\n        /* \"contracts/TokenVesting.sol\":3339:3372  TokensReleased(token, unreleased) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TokenVesting.sol\":3099:3377  function release(IERC20 token) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":2037:2119  function beneficiary() public view returns(address) {... */\n    tag_26:\n        /* \"contracts/TokenVesting.sol\":2080:2087  address */\n      0x0\n        /* \"contracts/TokenVesting.sol\":2102:2114  _beneficiary */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenVesting.sol\":2095:2114  return _beneficiary */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":2037:2119  function beneficiary() public view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownership/Ownable.sol\":599:739  function renounceOwnership() public onlyOwner {\r... */\n    tag_29:\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      tag_66\n        /* \"contracts/ownership/Ownable.sol\":425:432  isOwner */\n      tag_41\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/ownership/Ownable.sol\":417:471  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_67\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/ownership/Ownable.sol\":698:699  0 */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":661:701  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":682:688  _owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":661:701  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownership/Ownable.sol\":729:730  0 */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":712:718  _owner */\n      dup1\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":712:731  _owner = address(0) */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownership/Ownable.sol\":599:739  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":3585:3955  function revoke(IERC20 token) public onlyOwner {... */\n    tag_32:\n        /* \"contracts/TokenVesting.sol\":3695:3710  uint256 balance */\n      0x0\n        /* \"contracts/TokenVesting.sol\":3750:3768  uint256 unreleased */\n      dup1\n        /* \"contracts/TokenVesting.sol\":3801:3815  uint256 refund */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      tag_70\n        /* \"contracts/ownership/Ownable.sol\":425:432  isOwner */\n      tag_41\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      jump\t// in\n    tag_70:\n        /* \"contracts/ownership/Ownable.sol\":417:471  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_71\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/TokenVesting.sol\":3646:3656  _revocable */\n      0x5\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenVesting.sol\":3638:3657  require(_revocable) */\n      iszero\n      iszero\n      tag_73\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_73:\n        /* \"contracts/TokenVesting.sol\":3672:3680  _revoked */\n      0x7\n        /* \"contracts/TokenVesting.sol\":3672:3687  _revoked[token] */\n      0x0\n        /* \"contracts/TokenVesting.sol\":3681:3686  token */\n      dup6\n        /* \"contracts/TokenVesting.sol\":3672:3687  _revoked[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenVesting.sol\":3671:3687  !_revoked[token] */\n      iszero\n        /* \"contracts/TokenVesting.sol\":3663:3688  require(!_revoked[token]) */\n      iszero\n      iszero\n      tag_74\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_74:\n        /* \"contracts/TokenVesting.sol\":3713:3718  token */\n      dup4\n        /* \"contracts/TokenVesting.sol\":3713:3728  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenVesting.sol\":3737:3741  this */\n      address\n        /* \"contracts/TokenVesting.sol\":3713:3743  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_75:\n        /* \"contracts/TokenVesting.sol\":3713:3743  token.balanceOf(address(this)) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_76:\n        /* \"contracts/TokenVesting.sol\":3713:3743  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n        /* \"contracts/TokenVesting.sol\":3713:3743  token.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TokenVesting.sol\":3695:3743  uint256 balance = token.balanceOf(address(this)) */\n      swap3\n      pop\n        /* \"contracts/TokenVesting.sol\":3771:3795  _releasableAmount(token) */\n      tag_78\n        /* \"contracts/TokenVesting.sol\":3789:3794  token */\n      dup5\n        /* \"contracts/TokenVesting.sol\":3771:3788  _releasableAmount */\n      tag_58\n        /* \"contracts/TokenVesting.sol\":3771:3795  _releasableAmount(token) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/TokenVesting.sol\":3750:3795  uint256 unreleased = _releasableAmount(token) */\n      swap2\n      pop\n        /* \"contracts/TokenVesting.sol\":3818:3841  balance.sub(unreleased) */\n      tag_79\n        /* \"contracts/TokenVesting.sol\":3830:3840  unreleased */\n      dup3\n        /* \"contracts/TokenVesting.sol\":3818:3825  balance */\n      dup5\n        /* \"contracts/TokenVesting.sol\":3818:3829  balance.sub */\n      tag_80\n      swap1\n        /* \"contracts/TokenVesting.sol\":3818:3841  balance.sub(unreleased) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"contracts/TokenVesting.sol\":3801:3841  uint256 refund = balance.sub(unreleased) */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":3866:3870  true */\n      0x1\n        /* \"contracts/TokenVesting.sol\":3848:3856  _revoked */\n      0x7\n        /* \"contracts/TokenVesting.sol\":3848:3863  _revoked[token] */\n      0x0\n        /* \"contracts/TokenVesting.sol\":3857:3862  token */\n      dup7\n        /* \"contracts/TokenVesting.sol\":3848:3863  _revoked[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/TokenVesting.sol\":3848:3870  _revoked[token] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenVesting.sol\":3877:3912  token.safeTransfer(owner(), refund) */\n      tag_81\n        /* \"contracts/TokenVesting.sol\":3896:3903  owner() */\n      tag_82\n        /* \"contracts/TokenVesting.sol\":3896:3901  owner */\n      tag_38\n        /* \"contracts/TokenVesting.sol\":3896:3903  owner() */\n      jump\t// in\n    tag_82:\n        /* \"contracts/TokenVesting.sol\":3905:3911  refund */\n      dup3\n        /* \"contracts/TokenVesting.sol\":3877:3882  token */\n      dup7\n        /* \"contracts/TokenVesting.sol\":3877:3895  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_63\n      swap1\n        /* \"contracts/TokenVesting.sol\":3877:3912  token.safeTransfer(owner(), refund) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"contracts/TokenVesting.sol\":3924:3950  TokenVestingRevoked(token) */\n      0x39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af6\n        /* \"contracts/TokenVesting.sol\":3944:3949  token */\n      dup5\n        /* \"contracts/TokenVesting.sol\":3924:3950  TokenVestingRevoked(token) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TokenVesting.sol\":3585:3955  function revoke(IERC20 token) public onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":2594:2669  function revocable() public view returns(bool) {... */\n    tag_35:\n        /* \"contracts/TokenVesting.sol\":2635:2639  bool */\n      0x0\n        /* \"contracts/TokenVesting.sol\":2654:2664  _revocable */\n      0x5\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenVesting.sol\":2647:2664  return _revocable */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":2594:2669  function revocable() public view returns(bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownership/Ownable.sol\":298:377  function owner() public view returns (address) {\r... */\n    tag_38:\n        /* \"contracts/ownership/Ownable.sol\":336:343  address */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":363:369  _owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":356:369  return _owner */\n      swap1\n      pop\n        /* \"contracts/ownership/Ownable.sol\":298:377  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownership/Ownable.sol\":499:591  function isOwner() public view returns (bool) {\r... */\n    tag_41:\n        /* \"contracts/ownership/Ownable.sol\":539:543  bool */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":577:583  _owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":563:583  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":563:573  msg.sender */\n      caller\n        /* \"contracts/ownership/Ownable.sol\":563:583  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ownership/Ownable.sol\":556:583  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/ownership/Ownable.sol\":499:591  function isOwner() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":2732:2828  function released(address token) public view returns(uint256) {... */\n    tag_44:\n        /* \"contracts/TokenVesting.sol\":2785:2792  uint256 */\n      0x0\n        /* \"contracts/TokenVesting.sol\":2807:2816  _released */\n      0x6\n        /* \"contracts/TokenVesting.sol\":2807:2823  _released[token] */\n      0x0\n        /* \"contracts/TokenVesting.sol\":2817:2822  token */\n      dup4\n        /* \"contracts/TokenVesting.sol\":2807:2823  _released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TokenVesting.sol\":2800:2823  return _released[token] */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":2732:2828  function released(address token) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":2321:2391  function start() public view returns(uint256) {... */\n    tag_47:\n        /* \"contracts/TokenVesting.sol\":2358:2365  uint256 */\n      0x0\n        /* \"contracts/TokenVesting.sol\":2380:2386  _start */\n      sload(0x3)\n        /* \"contracts/TokenVesting.sol\":2373:2386  return _start */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":2321:2391  function start() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownership/Ownable.sol\":747:983  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_50:\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      tag_89\n        /* \"contracts/ownership/Ownable.sol\":425:432  isOwner */\n      tag_41\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/ownership/Ownable.sol\":417:471  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_90\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/ownership/Ownable.sol\":848:849  0 */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":828:850  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":828:836  newOwner */\n      dup2\n        /* \"contracts/ownership/Ownable.sol\":828:850  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ownership/Ownable.sol\":820:893  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      iszero\n      iszero\n      tag_92\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n      dup2\n      mstore\n      0x20\n      add\n      0x6464726573730000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/ownership/Ownable.sol\":938:946  newOwner */\n      dup1\n        /* \"contracts/ownership/Ownable.sol\":909:947  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":930:936  _owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":909:947  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownership/Ownable.sol\":967:975  newOwner */\n      dup1\n        /* \"contracts/ownership/Ownable.sol\":958:964  _owner */\n      0x0\n      dup1\n        /* \"contracts/ownership/Ownable.sol\":958:975  _owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownership/Ownable.sol\":747:983  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":2887:2978  function revoked(address token) public view returns(bool) {... */\n    tag_53:\n        /* \"contracts/TokenVesting.sol\":2939:2943  bool */\n      0x0\n        /* \"contracts/TokenVesting.sol\":2958:2966  _revoked */\n      0x7\n        /* \"contracts/TokenVesting.sol\":2958:2973  _revoked[token] */\n      0x0\n        /* \"contracts/TokenVesting.sol\":2967:2972  token */\n      dup4\n        /* \"contracts/TokenVesting.sol\":2958:2973  _revoked[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenVesting.sol\":2951:2973  return _revoked[token] */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":2887:2978  function revoked(address token) public view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":4109:4241  function _releasableAmount(IERC20 token) private view returns (uint256) {... */\n    tag_58:\n        /* \"contracts/TokenVesting.sol\":4172:4179  uint256 */\n      0x0\n        /* \"contracts/TokenVesting.sol\":4194:4236  _vestedAmount(token).sub(_released[token]) */\n      tag_95\n        /* \"contracts/TokenVesting.sol\":4219:4228  _released */\n      0x6\n        /* \"contracts/TokenVesting.sol\":4219:4235  _released[token] */\n      0x0\n        /* \"contracts/TokenVesting.sol\":4229:4234  token */\n      dup5\n        /* \"contracts/TokenVesting.sol\":4219:4235  _released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TokenVesting.sol\":4194:4214  _vestedAmount(token) */\n      tag_96\n        /* \"contracts/TokenVesting.sol\":4208:4213  token */\n      dup5\n        /* \"contracts/TokenVesting.sol\":4194:4207  _vestedAmount */\n      tag_97\n        /* \"contracts/TokenVesting.sol\":4194:4214  _vestedAmount(token) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/TokenVesting.sol\":4194:4218  _vestedAmount(token).sub */\n      tag_80\n      swap1\n        /* \"contracts/TokenVesting.sol\":4194:4236  _vestedAmount(token).sub(_released[token]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"contracts/TokenVesting.sol\":4187:4236  return _vestedAmount(token).sub(_released[token]) */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":4109:4241  function _releasableAmount(IERC20 token) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/math/SafeMath.sol\":631:810  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_61:\n        /* \"contracts/math/SafeMath.sol\":689:696  uint256 */\n      0x0\n        /* \"contracts/math/SafeMath.sol\":709:718  uint256 c */\n      dup1\n        /* \"contracts/math/SafeMath.sol\":725:726  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":721:722  a */\n      dup5\n        /* \"contracts/math/SafeMath.sol\":721:726  a + b */\n      add\n        /* \"contracts/math/SafeMath.sol\":709:726  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/math/SafeMath.sol\":750:751  a */\n      dup4\n        /* \"contracts/math/SafeMath.sol\":745:746  c */\n      dup2\n        /* \"contracts/math/SafeMath.sol\":745:751  c >= a */\n      lt\n      iszero\n        /* \"contracts/math/SafeMath.sol\":737:783  require(c >= a, \"SafeMath: addition overflow\") */\n      iszero\n      iszero\n      tag_99\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/math/SafeMath.sol\":801:802  c */\n      dup1\n        /* \"contracts/math/SafeMath.sol\":794:802  return c */\n      swap2\n      pop\n        /* \"contracts/math/SafeMath.sol\":631:810  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/SafeERC20.sol\":146:301  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n    tag_63:\n        /* \"contracts/token/SafeERC20.sol\":237:242  token */\n      dup3\n        /* \"contracts/token/SafeERC20.sol\":237:251  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/token/SafeERC20.sol\":252:254  to */\n      dup4\n        /* \"contracts/token/SafeERC20.sol\":256:261  value */\n      dup4\n        /* \"contracts/token/SafeERC20.sol\":237:262  token.transfer(to, value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_101\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_101:\n        /* \"contracts/token/SafeERC20.sol\":237:262  token.transfer(to, value) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_102:\n        /* \"contracts/token/SafeERC20.sol\":237:262  token.transfer(to, value) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_103:\n        /* \"contracts/token/SafeERC20.sol\":237:262  token.transfer(to, value) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/token/SafeERC20.sol\":229:293  require(token.transfer(to, value), \"SafeERC20: transfer failed\") */\n      iszero\n      iszero\n      tag_104\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a207472616e73666572206661696c6564000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/token/SafeERC20.sol\":146:301  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/math/SafeMath.sol\":465:623  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_80:\n        /* \"contracts/math/SafeMath.sol\":523:530  uint256 */\n      0x0\n        /* \"contracts/math/SafeMath.sol\":556:557  a */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":551:552  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":551:557  b <= a */\n      gt\n      iszero\n        /* \"contracts/math/SafeMath.sol\":543:592  require(b <= a, \"SafeMath: subtraction overflow\") */\n      iszero\n      iszero\n      tag_106\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/math/SafeMath.sol\":614:615  b */\n      dup2\n        /* \"contracts/math/SafeMath.sol\":610:611  a */\n      dup4\n        /* \"contracts/math/SafeMath.sol\":610:615  a - b */\n      sub\n        /* \"contracts/math/SafeMath.sol\":603:615  return a - b */\n      swap1\n      pop\n        /* \"contracts/math/SafeMath.sol\":465:623  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenVesting.sol\":4366:4808  function _vestedAmount(IERC20 token) private view returns (uint256) {... */\n    tag_97:\n        /* \"contracts/TokenVesting.sol\":4425:4432  uint256 */\n      0x0\n        /* \"contracts/TokenVesting.sol\":4440:4462  uint256 currentBalance */\n      dup1\n        /* \"contracts/TokenVesting.sol\":4492:4512  uint256 totalBalance */\n      0x0\n        /* \"contracts/TokenVesting.sol\":4465:4470  token */\n      dup4\n        /* \"contracts/TokenVesting.sol\":4465:4480  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TokenVesting.sol\":4481:4485  this */\n      address\n        /* \"contracts/TokenVesting.sol\":4465:4486  token.balanceOf(this) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_108:\n        /* \"contracts/TokenVesting.sol\":4465:4486  token.balanceOf(this) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_109:\n        /* \"contracts/TokenVesting.sol\":4465:4486  token.balanceOf(this) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_110:\n        /* \"contracts/TokenVesting.sol\":4465:4486  token.balanceOf(this) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/TokenVesting.sol\":4440:4486  uint256 currentBalance = token.balanceOf(this) */\n      swap2\n      pop\n        /* \"contracts/TokenVesting.sol\":4515:4551  currentBalance.add(_released[token]) */\n      tag_111\n        /* \"contracts/TokenVesting.sol\":4534:4543  _released */\n      0x6\n        /* \"contracts/TokenVesting.sol\":4534:4550  _released[token] */\n      0x0\n        /* \"contracts/TokenVesting.sol\":4544:4549  token */\n      dup7\n        /* \"contracts/TokenVesting.sol\":4534:4550  _released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TokenVesting.sol\":4515:4529  currentBalance */\n      dup4\n        /* \"contracts/TokenVesting.sol\":4515:4533  currentBalance.add */\n      tag_61\n      swap1\n        /* \"contracts/TokenVesting.sol\":4515:4551  currentBalance.add(_released[token]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"contracts/TokenVesting.sol\":4492:4551  uint256 totalBalance = currentBalance.add(_released[token]) */\n      swap1\n      pop\n        /* \"contracts/TokenVesting.sol\":4580:4586  _cliff */\n      sload(0x2)\n        /* \"contracts/TokenVesting.sol\":4562:4577  block.timestamp */\n      timestamp\n        /* \"contracts/TokenVesting.sol\":4562:4586  block.timestamp < _cliff */\n      lt\n        /* \"contracts/TokenVesting.sol\":4558:4804  if (block.timestamp < _cliff) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"contracts/TokenVesting.sol\":4603:4604  0 */\n      0x0\n        /* \"contracts/TokenVesting.sol\":4596:4604  return 0 */\n      swap3\n      pop\n      jump(tag_107)\n        /* \"contracts/TokenVesting.sol\":4558:4804  if (block.timestamp < _cliff) {... */\n    tag_112:\n        /* \"contracts/TokenVesting.sol\":4640:4661  _start.add(_duration) */\n      tag_114\n        /* \"contracts/TokenVesting.sol\":4651:4660  _duration */\n      sload(0x4)\n        /* \"contracts/TokenVesting.sol\":4640:4646  _start */\n      sload(0x3)\n        /* \"contracts/TokenVesting.sol\":4640:4650  _start.add */\n      tag_61\n      swap1\n        /* \"contracts/TokenVesting.sol\":4640:4661  _start.add(_duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/TokenVesting.sol\":4621:4636  block.timestamp */\n      timestamp\n        /* \"contracts/TokenVesting.sol\":4621:4661  block.timestamp >= _start.add(_duration) */\n      lt\n      iszero\n        /* \"contracts/TokenVesting.sol\":4621:4680  block.timestamp >= _start.add(_duration) || _revoked[token] */\n      dup1\n      tag_115\n      jumpi\n      pop\n        /* \"contracts/TokenVesting.sol\":4665:4673  _revoked */\n      0x7\n        /* \"contracts/TokenVesting.sol\":4665:4680  _revoked[token] */\n      0x0\n        /* \"contracts/TokenVesting.sol\":4674:4679  token */\n      dup6\n        /* \"contracts/TokenVesting.sol\":4665:4680  _revoked[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenVesting.sol\":4621:4680  block.timestamp >= _start.add(_duration) || _revoked[token] */\n    tag_115:\n        /* \"contracts/TokenVesting.sol\":4617:4804  if (block.timestamp >= _start.add(_duration) || _revoked[token]) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"contracts/TokenVesting.sol\":4697:4709  totalBalance */\n      dup1\n        /* \"contracts/TokenVesting.sol\":4690:4709  return totalBalance */\n      swap3\n      pop\n      jump(tag_107)\n        /* \"contracts/TokenVesting.sol\":4617:4804  if (block.timestamp >= _start.add(_duration) || _revoked[token]) {... */\n    tag_116:\n        /* \"contracts/TokenVesting.sol\":4737:4797  totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      tag_118\n        /* \"contracts/TokenVesting.sol\":4787:4796  _duration */\n      sload(0x4)\n        /* \"contracts/TokenVesting.sol\":4737:4782  totalBalance.mul(block.timestamp.sub(_start)) */\n      tag_119\n        /* \"contracts/TokenVesting.sol\":4754:4781  block.timestamp.sub(_start) */\n      tag_120\n        /* \"contracts/TokenVesting.sol\":4774:4780  _start */\n      sload(0x3)\n        /* \"contracts/TokenVesting.sol\":4754:4769  block.timestamp */\n      timestamp\n        /* \"contracts/TokenVesting.sol\":4754:4773  block.timestamp.sub */\n      tag_80\n      swap1\n        /* \"contracts/TokenVesting.sol\":4754:4781  block.timestamp.sub(_start) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"contracts/TokenVesting.sol\":4737:4749  totalBalance */\n      dup5\n        /* \"contracts/TokenVesting.sol\":4737:4753  totalBalance.mul */\n      tag_121\n      swap1\n        /* \"contracts/TokenVesting.sol\":4737:4782  totalBalance.mul(block.timestamp.sub(_start)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/TokenVesting.sol\":4737:4786  totalBalance.mul(block.timestamp.sub(_start)).div */\n      tag_122\n      swap1\n        /* \"contracts/TokenVesting.sol\":4737:4797  totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/TokenVesting.sol\":4730:4797  return totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      swap3\n      pop\n        /* \"contracts/TokenVesting.sol\":4366:4808  function _vestedAmount(IERC20 token) private view returns (uint256) {... */\n    tag_107:\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/math/SafeMath.sol\":52:272  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_121:\n        /* \"contracts/math/SafeMath.sol\":110:117  uint256 */\n      0x0\n        /* \"contracts/math/SafeMath.sol\":161:170  uint256 c */\n      dup1\n        /* \"contracts/math/SafeMath.sol\":139:140  0 */\n      0x0\n        /* \"contracts/math/SafeMath.sol\":134:135  a */\n      dup5\n        /* \"contracts/math/SafeMath.sol\":134:140  a == 0 */\n      eq\n        /* \"contracts/math/SafeMath.sol\":130:150  if (a == 0) return 0 */\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/math/SafeMath.sol\":149:150  0 */\n      0x0\n        /* \"contracts/math/SafeMath.sol\":142:150  return 0 */\n      swap2\n      pop\n      jump(tag_123)\n        /* \"contracts/math/SafeMath.sol\":130:150  if (a == 0) return 0 */\n    tag_124:\n        /* \"contracts/math/SafeMath.sol\":177:178  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":173:174  a */\n      dup5\n        /* \"contracts/math/SafeMath.sol\":173:178  a * b */\n      mul\n        /* \"contracts/math/SafeMath.sol\":161:178  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/math/SafeMath.sol\":206:207  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":201:202  a */\n      dup5\n        /* \"contracts/math/SafeMath.sol\":197:198  c */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":197:202  c / a */\n      dup2\n      iszero\n      iszero\n      tag_125\n      jumpi\n      invalid\n    tag_125:\n      div\n        /* \"contracts/math/SafeMath.sol\":197:207  c / a == b */\n      eq\n        /* \"contracts/math/SafeMath.sol\":189:245  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      iszero\n      iszero\n      tag_126\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n      dup2\n      mstore\n      0x20\n      add\n      0x7700000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/math/SafeMath.sol\":263:264  c */\n      dup1\n        /* \"contracts/math/SafeMath.sol\":256:264  return c */\n      swap2\n      pop\n        /* \"contracts/math/SafeMath.sol\":52:272  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_123:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/math/SafeMath.sol\":280:457  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_122:\n        /* \"contracts/math/SafeMath.sol\":338:345  uint256 */\n      0x0\n        /* \"contracts/math/SafeMath.sol\":413:422  uint256 c */\n      dup1\n        /* \"contracts/math/SafeMath.sol\":370:371  0 */\n      0x0\n        /* \"contracts/math/SafeMath.sol\":366:367  b */\n      dup4\n        /* \"contracts/math/SafeMath.sol\":366:371  b > 0 */\n      gt\n        /* \"contracts/math/SafeMath.sol\":358:402  require(b > 0, \"SafeMath: division by zero\") */\n      iszero\n      iszero\n      tag_128\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/math/SafeMath.sol\":429:430  b */\n      dup3\n        /* \"contracts/math/SafeMath.sol\":425:426  a */\n      dup5\n        /* \"contracts/math/SafeMath.sol\":425:430  a / b */\n      dup2\n      iszero\n      iszero\n      tag_129\n      jumpi\n      invalid\n    tag_129:\n      div\n        /* \"contracts/math/SafeMath.sol\":413:430  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/math/SafeMath.sol\":448:449  c */\n      dup1\n        /* \"contracts/math/SafeMath.sol\":441:449  return c */\n      swap2\n      pop\n        /* \"contracts/math/SafeMath.sol\":280:457  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582051c1d26ddff4119059aa0f1c706c42deadc9740398b521f81bb374f5d40b2e430029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xA0 DUP1 PUSH3 0x162C DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH3 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 GT ISZERO ISZERO ISZERO PUSH3 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT ISZERO ISZERO PUSH3 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH3 0x19A DUP4 DUP7 PUSH3 0x244 PUSH5 0x100000000 MUL PUSH3 0xD57 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST GT ISZERO ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x22C DUP4 DUP6 PUSH3 0x244 PUSH5 0x100000000 MUL PUSH3 0xD57 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x2CF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH3 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134D DUP1 PUSH3 0x2DF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x872A7810 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xFA01DC06 EQ PUSH2 0x38E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x594 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x335 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA99 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP3 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46B DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4FB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDE1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59C PUSH2 0x9EF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x6DC PUSH2 0x9EF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x873 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP PUSH2 0x8A5 DUP5 PUSH2 0xCF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8BA DUP3 DUP5 PUSH2 0xF38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x946 PUSH2 0x91F PUSH2 0x9C6 JUMP JUMPDEST DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDE1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x39983C6D4D174A7AEE564F449D4A5C3C7AC9649D72B7793C56901183996F8AF6 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAA1 PUSH2 0x9EF JUMP JUMPDEST ISZERO ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD42 DUP5 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0xF38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A207472616E73666572206661696C6564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xFB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1071 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP PUSH2 0x10EC PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0xD57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1118 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xD57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x116F JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x117C JUMPI DUP1 SWAP3 POP PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x11B7 PUSH1 0x4 SLOAD PUSH2 0x11A9 PUSH2 0x119A PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xF38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x11C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x128E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1287 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x11E7 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x1283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x1309 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1314 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MLOAD 0xc1 0xd2 PUSH14 0xDFF4119059AA0F1C706C42DEADC9 PUSH21 0x398B521F81BB374F5D40B2E430029000000000000 ",
							"sourceMap": "414:4396:0:-;;;1525:452;8:9:-1;5:2;;;30:1;27;20:12;5:2;1525:452:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;216:10:2;207:6;;:19;;;;;;;;;;;;;;;;;;275:6;;;;;;;;;;;242:40;;271:1;242:40;;;;;;;;;;;;1704:1:0;1681:25;;:11;:25;;;;1673:34;;;;;;;;1738:8;1721:13;:25;;1713:34;;;;;;;;1772:1;1761:8;:12;1753:21;;;;;;;;1810:15;1788:19;1798:8;1788:5;:9;;;;;;:19;;;;;:::i;:::-;:37;1780:46;;;;;;;;1848:11;1833:12;;:26;;;;;;;;;;;;;;;;;;1878:9;1865:10;;:22;;;;;;;;;;;;;;;;;;1905:8;1893:9;:20;;;;1928:24;1938:13;1928:5;:9;;;;;;:24;;;;;:::i;:::-;1919:6;:33;;;;1967:5;1958:6;:14;;;;1525:452;;;;;414:4396;;631:179:1;689:7;709:9;725:1;721;:5;709:17;;750:1;745;:6;;737:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:1;794:8;;631:179;;;;;:::o;414:4396:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630fb5a6b4146100ca57806313d033c0146100f5578063191655871461012057806338af3eed14610163578063715018a6146101ba57806374a8f103146101d1578063872a7810146102145780638da5cb5b146102435780638f32d59b1461029a5780639852595c146102c9578063be9a655514610320578063f2fde38b1461034b578063fa01dc061461038e575b600080fd5b3480156100d657600080fd5b506100df6103e9565b6040518082815260200191505060405180910390f35b34801561010157600080fd5b5061010a6103f3565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b50610161600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103fd565b005b34801561016f57600080fd5b5061017861056a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c657600080fd5b506101cf610594565b005b3480156101dd57600080fd5b50610212600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106cf565b005b34801561022057600080fd5b506102296109af565b604051808215151515815260200191505060405180910390f35b34801561024f57600080fd5b506102586109c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102a657600080fd5b506102af6109ef565b604051808215151515815260200191505060405180910390f35b3480156102d557600080fd5b5061030a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a46565b6040518082815260200191505060405180910390f35b34801561032c57600080fd5b50610335610a8f565b6040518082815260200191505060405180910390f35b34801561035757600080fd5b5061038c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a99565b005b34801561039a57600080fd5b506103cf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9e565b604051808215151515815260200191505060405180910390f35b6000600454905090565b6000600254905090565b600061040882610cf4565b905060008111151561041957600080fd5b61046b81600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d5790919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506104fb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16610de19092919063ffffffff16565b7fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df931798282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61059c6109ef565b1515610610576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060006106dc6109ef565b1515610750576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600560009054906101000a900460ff16151561076b57600080fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156107c457600080fd5b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050506040513d602081101561088957600080fd5b810190808051906020019092919050505092506108a584610cf4565b91506108ba8284610f3890919063ffffffff16565b90506001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061094661091f6109c6565b828673ffffffffffffffffffffffffffffffffffffffff16610de19092919063ffffffff16565b7f39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af684604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150505050565b6000600560009054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600354905090565b610aa16109ef565b1515610b15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610be0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000610d50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d4284610fbd565b610f3890919063ffffffff16565b9050919050565b6000808284019050838110151515610dd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e8457600080fd5b505af1158015610e98573d6000803e3d6000fd5b505050506040513d6020811015610eae57600080fd5b81019080805190602001909291905050501515610f33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5361666545524332303a207472616e73666572206661696c656400000000000081525060200191505060405180910390fd5b505050565b6000828211151515610fb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561105d57600080fd5b505af1158015611071573d6000803e3d6000fd5b505050506040513d602081101561108757600080fd5b810190808051906020019092919050505091506110ec600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610d5790919063ffffffff16565b905060025442101561110157600092506111ba565b611118600454600354610d5790919063ffffffff16565b4210158061116f5750600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1561117c578092506111ba565b6111b76004546111a961119a60035442610f3890919063ffffffff16565b846111c190919063ffffffff16565b61128e90919063ffffffff16565b92505b5050919050565b60008060008414156111d65760009150611287565b82840290508284828115156111e757fe5b04141515611283576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8091505b5092915050565b600080600083111515611309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b828481151561131457fe5b04905080915050929150505600a165627a7a7230582051c1d26ddff4119059aa0f1c706c42deadc9740398b521f81bb374f5d40b2e430029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x872A7810 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xFA01DC06 EQ PUSH2 0x38E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x594 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x335 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA99 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP3 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46B DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4FB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDE1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59C PUSH2 0x9EF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x6DC PUSH2 0x9EF JUMP JUMPDEST ISZERO ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x873 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP PUSH2 0x8A5 DUP5 PUSH2 0xCF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8BA DUP3 DUP5 PUSH2 0xF38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x946 PUSH2 0x91F PUSH2 0x9C6 JUMP JUMPDEST DUP3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDE1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x39983C6D4D174A7AEE564F449D4A5C3C7AC9649D72B7793C56901183996F8AF6 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAA1 PUSH2 0x9EF JUMP JUMPDEST ISZERO ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD42 DUP5 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0xF38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A207472616E73666572206661696C6564000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0xFB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1071 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1087 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP PUSH2 0x10EC PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0xD57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1118 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xD57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x116F JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x117C JUMPI DUP1 SWAP3 POP PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x11B7 PUSH1 0x4 SLOAD PUSH2 0x11A9 PUSH2 0x119A PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xF38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x11C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x128E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x1287 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x11E7 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x1283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 GT ISZERO ISZERO PUSH2 0x1309 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1314 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MLOAD 0xc1 0xd2 PUSH14 0xDFF4119059AA0F1C706C42DEADC9 PUSH21 0x398B521F81BB374F5D40B2E430029000000000000 ",
							"sourceMap": "414:4396:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2455:76:0;;;;;;;;;;;;;;;;;;;;;;;2185:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2185:70:0;;;;;;;;;;;;;;;;;;;;;;;3099:278;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3099:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2037:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;599:140:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;599:140:2;;;;;;3585:370:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3585:370:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2594:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2594:75:0;;;;;;;;;;;;;;;;;;;;;;;;;;;298:79:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;298:79:2;;;;;;;;;;;;;;;;;;;;;;;;;;;499:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:92:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:96:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2732:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:70:0;;;;;;;;;;;;;;;;;;;;;;;747:236:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;747:236:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2887:91:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2887:91:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:76;2495:7;2517:9;;2510:16;;2455:76;:::o;2185:70::-;2222:7;2244:6;;2237:13;;2185:70;:::o;3099:278::-;3143:18;3164:24;3182:5;3164:17;:24::i;:::-;3143:45;;3216:1;3203:10;:14;3195:23;;;;;;;;3244:32;3265:10;3244:9;:16;3254:5;3244:16;;;;;;;;;;;;;;;;:20;;:32;;;;:::i;:::-;3225:9;:16;3235:5;3225:16;;;;;;;;;;;;;;;:51;;;;3283:44;3302:12;;;;;;;;;;;3316:10;3283:5;:18;;;;:44;;;;;:::i;:::-;3339:33;3354:5;3361:10;3339:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;3099:278;;:::o;2037:82::-;2080:7;2102:12;;;;;;;;;;;2095:19;;2037:82;:::o;599:140:2:-;425:9;:7;:9::i;:::-;417:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:1;661:40;;682:6;;;;;;;;;;;661:40;;;;;;;;;;;;729:1;712:6;;:19;;;;;;;;;;;;;;;;;;599:140::o;3585:370:0:-;3695:15;3750:18;3801:14;425:9:2;:7;:9::i;:::-;417:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3646:10:0;;;;;;;;;;;3638:19;;;;;;;;3672:8;:15;3681:5;3672:15;;;;;;;;;;;;;;;;;;;;;;;;;3671:16;3663:25;;;;;;;;3713:5;:15;;;3737:4;3713:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3713:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3713:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3713:30:0;;;;;;;;;;;;;;;;3695:48;;3771:24;3789:5;3771:17;:24::i;:::-;3750:45;;3818:23;3830:10;3818:7;:11;;:23;;;;:::i;:::-;3801:40;;3866:4;3848:8;:15;3857:5;3848:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;3877:35;3896:7;:5;:7::i;:::-;3905:6;3877:5;:18;;;;:35;;;;;:::i;:::-;3924:26;3944:5;3924:26;;;;;;;;;;;;;;;;;;;;;;3585:370;;;;:::o;2594:75::-;2635:4;2654:10;;;;;;;;;;;2647:17;;2594:75;:::o;298:79:2:-;336:7;363:6;;;;;;;;;;;356:13;;298:79;:::o;499:92::-;539:4;577:6;;;;;;;;;;;563:20;;:10;:20;;;556:27;;499:92;:::o;2732:96:0:-;2785:7;2807:9;:16;2817:5;2807:16;;;;;;;;;;;;;;;;2800:23;;2732:96;;;:::o;2321:70::-;2358:7;2380:6;;2373:13;;2321:70;:::o;747:236:2:-;425:9;:7;:9::i;:::-;417:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:1;828:22;;:8;:22;;;;820:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:8;909:38;;930:6;;;;;;;;;;;909:38;;;;;;;;;;;;967:8;958:6;;:17;;;;;;;;;;;;;;;;;;747:236;:::o;2887:91:0:-;2939:4;2958:8;:15;2967:5;2958:15;;;;;;;;;;;;;;;;;;;;;;;;;2951:22;;2887:91;;;:::o;4109:132::-;4172:7;4194:42;4219:9;:16;4229:5;4219:16;;;;;;;;;;;;;;;;4194:20;4208:5;4194:13;:20::i;:::-;:24;;:42;;;;:::i;:::-;4187:49;;4109:132;;;:::o;631:179:1:-;689:7;709:9;725:1;721;:5;709:17;;750:1;745;:6;;737:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:1;794:8;;631:179;;;;;:::o;146:155:4:-;237:5;:14;;;252:2;256:5;237:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:25:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;237:25:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;237:25:4;;;;;;;;;;;;;;;;229:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;146:155;;;:::o;465:158:1:-;523:7;556:1;551;:6;;543:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:1;610;:5;603:12;;465:158;;;;:::o;4366:442:0:-;4425:7;4440:22;4492:20;4465:5;:15;;;4481:4;4465:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4465:21:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4465:21:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4465:21:0;;;;;;;;;;;;;;;;4440:46;;4515:36;4534:9;:16;4544:5;4534:16;;;;;;;;;;;;;;;;4515:14;:18;;:36;;;;:::i;:::-;4492:59;;4580:6;;4562:15;:24;4558:246;;;4603:1;4596:8;;;;4558:246;4640:21;4651:9;;4640:6;;:10;;:21;;;;:::i;:::-;4621:15;:40;;:59;;;;4665:8;:15;4674:5;4665:15;;;;;;;;;;;;;;;;;;;;;;;;;4621:59;4617:187;;;4697:12;4690:19;;;;4617:187;4737:60;4787:9;;4737:45;4754:27;4774:6;;4754:15;:19;;:27;;;;:::i;:::-;4737:12;:16;;:45;;;;:::i;:::-;:49;;:60;;;;:::i;:::-;4730:67;;4366:442;;;;;;:::o;52:220:1:-;110:7;161:9;139:1;134;:6;130:20;;;149:1;142:8;;;;130:20;177:1;173;:5;161:17;;206:1;201;197;:5;;;;;;;;:10;189:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;263:1;256:8;;52:220;;;;;;:::o;280:177::-;338:7;413:9;370:1;366;:5;358:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:1;425;:5;;;;;;;;413:17;;448:1;441:8;;280:177;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "988200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "516",
								"cliff()": "424",
								"duration()": "402",
								"isOwner()": "643",
								"owner()": "604",
								"release(address)": "infinite",
								"released(address)": "757",
								"renounceOwnership()": "22580",
								"revocable()": "582",
								"revoke(address)": "infinite",
								"revoked(address)": "871",
								"start()": "622",
								"transferOwnership(address)": "22842"
							},
							"internal": {
								"_releasableAmount(contract IERC20)": "infinite",
								"_vestedAmount(contract IERC20)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 414,
									"end": 4810,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "MSTORE"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "POP"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "MLOAD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP4"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "CODECOPY"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP2"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "ADD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "MSTORE"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP2"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "ADD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "MLOAD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "ADD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP3"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP2"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "MLOAD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "ADD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP3"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP2"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "MLOAD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "ADD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP3"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP2"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "MLOAD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "ADD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP3"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP2"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "DUP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "MLOAD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "ADD"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP3"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP2"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "SWAP1"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "POP"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "POP"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "POP"
								},
								{
									"begin": 216,
									"end": 226,
									"name": "CALLER"
								},
								{
									"begin": 207,
									"end": 213,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 207,
									"end": 213,
									"name": "DUP1"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "EXP"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "DUP2"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "SLOAD"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "DUP2"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "MUL"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "NOT"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "AND"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "SWAP1"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "DUP4"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "AND"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "MUL"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "OR"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "SWAP1"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "SSTORE"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "POP"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "DUP1"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "SLOAD"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "EXP"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "DIV"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "AND"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "AND"
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "AND"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "MLOAD"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "MLOAD"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "SWAP2"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "SUB"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "SWAP1"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "LOG3"
								},
								{
									"begin": 1704,
									"end": 1705,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1681,
									"end": 1706,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1681,
									"end": 1706,
									"name": "AND"
								},
								{
									"begin": 1681,
									"end": 1692,
									"name": "DUP6"
								},
								{
									"begin": 1681,
									"end": 1706,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1681,
									"end": 1706,
									"name": "AND"
								},
								{
									"begin": 1681,
									"end": 1706,
									"name": "EQ"
								},
								{
									"begin": 1681,
									"end": 1706,
									"name": "ISZERO"
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "ISZERO"
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "ISZERO"
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "JUMPI"
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "DUP1"
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "REVERT"
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 1673,
									"end": 1707,
									"name": "JUMPDEST"
								},
								{
									"begin": 1738,
									"end": 1746,
									"name": "DUP2"
								},
								{
									"begin": 1721,
									"end": 1734,
									"name": "DUP4"
								},
								{
									"begin": 1721,
									"end": 1746,
									"name": "GT"
								},
								{
									"begin": 1721,
									"end": 1746,
									"name": "ISZERO"
								},
								{
									"begin": 1713,
									"end": 1747,
									"name": "ISZERO"
								},
								{
									"begin": 1713,
									"end": 1747,
									"name": "ISZERO"
								},
								{
									"begin": 1713,
									"end": 1747,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 1713,
									"end": 1747,
									"name": "JUMPI"
								},
								{
									"begin": 1713,
									"end": 1747,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1747,
									"name": "DUP1"
								},
								{
									"begin": 1713,
									"end": 1747,
									"name": "REVERT"
								},
								{
									"begin": 1713,
									"end": 1747,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 1713,
									"end": 1747,
									"name": "JUMPDEST"
								},
								{
									"begin": 1772,
									"end": 1773,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1769,
									"name": "DUP3"
								},
								{
									"begin": 1761,
									"end": 1773,
									"name": "GT"
								},
								{
									"begin": 1753,
									"end": 1774,
									"name": "ISZERO"
								},
								{
									"begin": 1753,
									"end": 1774,
									"name": "ISZERO"
								},
								{
									"begin": 1753,
									"end": 1774,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 1753,
									"end": 1774,
									"name": "JUMPI"
								},
								{
									"begin": 1753,
									"end": 1774,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1753,
									"end": 1774,
									"name": "DUP1"
								},
								{
									"begin": 1753,
									"end": 1774,
									"name": "REVERT"
								},
								{
									"begin": 1753,
									"end": 1774,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1753,
									"end": 1774,
									"name": "JUMPDEST"
								},
								{
									"begin": 1810,
									"end": 1825,
									"name": "TIMESTAMP"
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1798,
									"end": 1806,
									"name": "DUP4"
								},
								{
									"begin": 1788,
									"end": 1793,
									"name": "DUP7"
								},
								{
									"begin": 1788,
									"end": 1797,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 1788,
									"end": 1797,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1788,
									"end": 1797,
									"name": "MUL"
								},
								{
									"begin": 1788,
									"end": 1797,
									"name": "PUSH [tag]",
									"value": "18446744073709551677"
								},
								{
									"begin": 1788,
									"end": 1797,
									"name": "OR"
								},
								{
									"begin": 1788,
									"end": 1797,
									"name": "SWAP1"
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "SWAP2"
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "SWAP1"
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "SWAP1"
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "DIV"
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "JUMPDEST"
								},
								{
									"begin": 1788,
									"end": 1825,
									"name": "GT"
								},
								{
									"begin": 1780,
									"end": 1826,
									"name": "ISZERO"
								},
								{
									"begin": 1780,
									"end": 1826,
									"name": "ISZERO"
								},
								{
									"begin": 1780,
									"end": 1826,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 1780,
									"end": 1826,
									"name": "JUMPI"
								},
								{
									"begin": 1780,
									"end": 1826,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1780,
									"end": 1826,
									"name": "DUP1"
								},
								{
									"begin": 1780,
									"end": 1826,
									"name": "REVERT"
								},
								{
									"begin": 1780,
									"end": 1826,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 1780,
									"end": 1826,
									"name": "JUMPDEST"
								},
								{
									"begin": 1848,
									"end": 1859,
									"name": "DUP5"
								},
								{
									"begin": 1833,
									"end": 1845,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1833,
									"end": 1845,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "EXP"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "DUP2"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "SLOAD"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "DUP2"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "MUL"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "NOT"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "AND"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "SWAP1"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "DUP4"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "AND"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "MUL"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "OR"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "SWAP1"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "SSTORE"
								},
								{
									"begin": 1833,
									"end": 1859,
									"name": "POP"
								},
								{
									"begin": 1878,
									"end": 1887,
									"name": "DUP1"
								},
								{
									"begin": 1865,
									"end": 1875,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 1865,
									"end": 1875,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "EXP"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "DUP2"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "SLOAD"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "DUP2"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "MUL"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "NOT"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "AND"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "SWAP1"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "DUP4"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "ISZERO"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "ISZERO"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "MUL"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "OR"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "SWAP1"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "SSTORE"
								},
								{
									"begin": 1865,
									"end": 1887,
									"name": "POP"
								},
								{
									"begin": 1905,
									"end": 1913,
									"name": "DUP2"
								},
								{
									"begin": 1893,
									"end": 1902,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1893,
									"end": 1913,
									"name": "DUP2"
								},
								{
									"begin": 1893,
									"end": 1913,
									"name": "SWAP1"
								},
								{
									"begin": 1893,
									"end": 1913,
									"name": "SSTORE"
								},
								{
									"begin": 1893,
									"end": 1913,
									"name": "POP"
								},
								{
									"begin": 1928,
									"end": 1952,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "DUP4"
								},
								{
									"begin": 1928,
									"end": 1933,
									"name": "DUP6"
								},
								{
									"begin": 1928,
									"end": 1937,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 1928,
									"end": 1937,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1928,
									"end": 1937,
									"name": "MUL"
								},
								{
									"begin": 1928,
									"end": 1937,
									"name": "PUSH [tag]",
									"value": "18446744073709551677"
								},
								{
									"begin": 1928,
									"end": 1937,
									"name": "OR"
								},
								{
									"begin": 1928,
									"end": 1937,
									"name": "SWAP1"
								},
								{
									"begin": 1928,
									"end": 1952,
									"name": "SWAP2"
								},
								{
									"begin": 1928,
									"end": 1952,
									"name": "SWAP1"
								},
								{
									"begin": 1928,
									"end": 1952,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1928,
									"end": 1952,
									"name": "SWAP1"
								},
								{
									"begin": 1928,
									"end": 1952,
									"name": "DIV"
								},
								{
									"begin": 1928,
									"end": 1952,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1928,
									"end": 1952,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 1928,
									"end": 1952,
									"name": "JUMPDEST"
								},
								{
									"begin": 1919,
									"end": 1925,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1919,
									"end": 1952,
									"name": "DUP2"
								},
								{
									"begin": 1919,
									"end": 1952,
									"name": "SWAP1"
								},
								{
									"begin": 1919,
									"end": 1952,
									"name": "SSTORE"
								},
								{
									"begin": 1919,
									"end": 1952,
									"name": "POP"
								},
								{
									"begin": 1967,
									"end": 1972,
									"name": "DUP4"
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 1972,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 1972,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 1972,
									"name": "SSTORE"
								},
								{
									"begin": 1958,
									"end": 1972,
									"name": "POP"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "POP"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "POP"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "POP"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "POP"
								},
								{
									"begin": 1525,
									"end": 1977,
									"name": "POP"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "JUMP"
								},
								{
									"begin": 631,
									"end": 810,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 631,
									"end": 810,
									"name": "JUMPDEST"
								},
								{
									"begin": 689,
									"end": 696,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 709,
									"end": 718,
									"name": "DUP1"
								},
								{
									"begin": 725,
									"end": 726,
									"name": "DUP3"
								},
								{
									"begin": 721,
									"end": 722,
									"name": "DUP5"
								},
								{
									"begin": 721,
									"end": 726,
									"name": "ADD"
								},
								{
									"begin": 709,
									"end": 726,
									"name": "SWAP1"
								},
								{
									"begin": 709,
									"end": 726,
									"name": "POP"
								},
								{
									"begin": 750,
									"end": 751,
									"name": "DUP4"
								},
								{
									"begin": 745,
									"end": 746,
									"name": "DUP2"
								},
								{
									"begin": 745,
									"end": 751,
									"name": "LT"
								},
								{
									"begin": 745,
									"end": 751,
									"name": "ISZERO"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "ISZERO"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "ISZERO"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "JUMPI"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "MLOAD"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP2"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "MSTORE"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "ADD"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP1"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP1"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "ADD"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP3"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP2"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "SUB"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP3"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "MSTORE"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP2"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "MSTORE"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "ADD"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP1"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP2"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "MSTORE"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "POP"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "ADD"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "SWAP2"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "POP"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "POP"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "MLOAD"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "DUP1"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "SWAP2"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "SUB"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "SWAP1"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "REVERT"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 737,
									"end": 783,
									"name": "JUMPDEST"
								},
								{
									"begin": 801,
									"end": 802,
									"name": "DUP1"
								},
								{
									"begin": 794,
									"end": 802,
									"name": "SWAP2"
								},
								{
									"begin": 794,
									"end": 802,
									"name": "POP"
								},
								{
									"begin": 631,
									"end": 810,
									"name": "POP"
								},
								{
									"begin": 631,
									"end": 810,
									"name": "SWAP3"
								},
								{
									"begin": 631,
									"end": 810,
									"name": "SWAP2"
								},
								{
									"begin": 631,
									"end": 810,
									"name": "POP"
								},
								{
									"begin": 631,
									"end": 810,
									"name": "POP"
								},
								{
									"begin": 631,
									"end": 810,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "JUMPDEST"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "DUP1"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "CODECOPY"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 414,
									"end": 4810,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582051c1d26ddff4119059aa0f1c706c42deadc9740398b521f81bb374f5d40b2e430029",
									".code": [
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "MSTORE"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "LT"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "SWAP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DIV"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "AND"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "FB5A6B4"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "13D033C0"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "19165587"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "38AF3EED"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "74A8F103"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "872A7810"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "9852595C"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "BE9A6555"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "FA01DC06"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "EQ"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "JUMPDEST"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 4810,
											"name": "REVERT"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "JUMPDEST"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "POP"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "JUMP"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "JUMPDEST"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "MLOAD"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "DUP3"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "DUP2"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "MSTORE"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "ADD"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "SWAP2"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "POP"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "POP"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "MLOAD"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "SWAP2"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "SUB"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "SWAP1"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "RETURN"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "JUMPDEST"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "POP"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "JUMP"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "JUMPDEST"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "MLOAD"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "DUP1"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "DUP3"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "DUP2"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "MSTORE"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "ADD"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "SWAP2"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "POP"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "POP"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "MLOAD"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "DUP1"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "SWAP2"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "SUB"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "SWAP1"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "RETURN"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "JUMPDEST"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "POP"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "DUP1"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "SUB"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "DUP2"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "ADD"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "SWAP1"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "DUP1"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "DUP1"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "AND"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "SWAP1"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "ADD"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "SWAP1"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "SWAP3"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "SWAP2"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "SWAP1"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "POP"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "POP"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "POP"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "JUMP"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "JUMPDEST"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "STOP"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "JUMPDEST"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "POP"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "JUMP"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "JUMPDEST"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "MLOAD"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "DUP1"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "DUP3"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "AND"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "AND"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "DUP2"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "MSTORE"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "ADD"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "SWAP2"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "POP"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "POP"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "MLOAD"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "DUP1"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "SWAP2"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "SUB"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "SWAP1"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "RETURN"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "POP"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMP"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "STOP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "DUP1"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "SUB"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "DUP2"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "SWAP1"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "DUP1"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "DUP1"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "AND"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "SWAP1"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "SWAP1"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "SWAP3"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "SWAP2"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "SWAP1"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "JUMP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "STOP"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "JUMPDEST"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "POP"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "JUMP"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "JUMPDEST"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "MLOAD"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "DUP1"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "DUP3"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "ISZERO"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "ISZERO"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "ISZERO"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "ISZERO"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "DUP2"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "MSTORE"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "ADD"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "SWAP2"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "POP"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "POP"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "MLOAD"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "DUP1"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "SWAP2"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "SUB"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "SWAP1"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "RETURN"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMPDEST"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMPDEST"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "MLOAD"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "DUP3"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "AND"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "AND"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "DUP2"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "MSTORE"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "ADD"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SWAP2"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "MLOAD"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SWAP2"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SUB"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SWAP1"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "RETURN"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "MLOAD"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "DUP3"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "DUP2"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "MSTORE"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ADD"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SWAP2"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "MLOAD"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SWAP2"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SUB"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "RETURN"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "JUMPDEST"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "DUP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SUB"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "DUP2"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "ADD"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "DUP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "DUP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "AND"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "ADD"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP3"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP2"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "JUMP"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "JUMPDEST"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "MLOAD"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "DUP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "DUP3"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "DUP2"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "MSTORE"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "ADD"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP2"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "MLOAD"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "DUP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP2"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SUB"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "RETURN"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "JUMPDEST"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "JUMP"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "JUMPDEST"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "MLOAD"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "DUP1"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "DUP3"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "DUP2"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "MSTORE"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "ADD"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "SWAP2"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "MLOAD"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "DUP1"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "SWAP2"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "SUB"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "RETURN"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SUB"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "DUP2"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "AND"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP3"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP2"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "STOP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "JUMPDEST"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "POP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "DUP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SUB"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "DUP2"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "ADD"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "DUP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "DUP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "AND"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "ADD"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP3"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP2"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "POP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "POP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "POP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "JUMP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "JUMPDEST"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "MLOAD"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "DUP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "DUP3"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "ISZERO"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "ISZERO"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "ISZERO"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "ISZERO"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "DUP2"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "MSTORE"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "ADD"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP2"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "POP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "POP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "MLOAD"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "DUP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP2"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SUB"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "RETURN"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "JUMPDEST"
										},
										{
											"begin": 2495,
											"end": 2502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2526,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2517,
											"end": 2526,
											"name": "SLOAD"
										},
										{
											"begin": 2510,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2526,
											"name": "POP"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "SWAP1"
										},
										{
											"begin": 2455,
											"end": 2531,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "JUMPDEST"
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2250,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2244,
											"end": 2250,
											"name": "SLOAD"
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2237,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "SWAP1"
										},
										{
											"begin": 2185,
											"end": 2255,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "JUMPDEST"
										},
										{
											"begin": 3143,
											"end": 3161,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3188,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "DUP3"
										},
										{
											"begin": 3164,
											"end": 3181,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 3164,
											"end": 3188,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3164,
											"end": 3188,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 3164,
											"end": 3188,
											"name": "JUMPDEST"
										},
										{
											"begin": 3143,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3143,
											"end": 3188,
											"name": "POP"
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3213,
											"name": "DUP2"
										},
										{
											"begin": 3203,
											"end": 3217,
											"name": "GT"
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "ISZERO"
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "ISZERO"
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "JUMPI"
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "DUP1"
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "REVERT"
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 3195,
											"end": 3218,
											"name": "JUMPDEST"
										},
										{
											"begin": 3244,
											"end": 3276,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "DUP2"
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3259,
											"name": "DUP6"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "AND"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "AND"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "MSTORE"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "ADD"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "MSTORE"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "ADD"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "KECCAK256"
										},
										{
											"begin": 3244,
											"end": 3260,
											"name": "SLOAD"
										},
										{
											"begin": 3244,
											"end": 3264,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3244,
											"end": 3264,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3276,
											"name": "SWAP2"
										},
										{
											"begin": 3244,
											"end": 3276,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3276,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3276,
											"name": "AND"
										},
										{
											"begin": 3244,
											"end": 3276,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3276,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3244,
											"end": 3276,
											"name": "JUMPDEST"
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "DUP5"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "AND"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "AND"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "DUP2"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "MSTORE"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "ADD"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SWAP1"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "DUP2"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "MSTORE"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "ADD"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "KECCAK256"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "DUP2"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "SWAP1"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "SSTORE"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "POP"
										},
										{
											"begin": 3283,
											"end": 3327,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SLOAD"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "EXP"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "DIV"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "AND"
										},
										{
											"begin": 3316,
											"end": 3326,
											"name": "DUP3"
										},
										{
											"begin": 3283,
											"end": 3288,
											"name": "DUP5"
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "AND"
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "SWAP1"
										},
										{
											"begin": 3283,
											"end": 3327,
											"name": "SWAP3"
										},
										{
											"begin": 3283,
											"end": 3327,
											"name": "SWAP2"
										},
										{
											"begin": 3283,
											"end": 3327,
											"name": "SWAP1"
										},
										{
											"begin": 3283,
											"end": 3327,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3283,
											"end": 3327,
											"name": "AND"
										},
										{
											"begin": 3283,
											"end": 3327,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3283,
											"end": 3327,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 3283,
											"end": 3327,
											"name": "JUMPDEST"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "PUSH",
											"value": "C7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179"
										},
										{
											"begin": 3354,
											"end": 3359,
											"name": "DUP3"
										},
										{
											"begin": 3361,
											"end": 3371,
											"name": "DUP3"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "DUP4"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "AND"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "AND"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "DUP3"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "SWAP3"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "POP"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "MLOAD"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "SWAP2"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "LOG1"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "POP"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "POP"
										},
										{
											"begin": 3099,
											"end": 3377,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "JUMPDEST"
										},
										{
											"begin": 2080,
											"end": 2087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "SLOAD"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "EXP"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "SWAP1"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "DIV"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "AND"
										},
										{
											"begin": 2095,
											"end": 2114,
											"name": "SWAP1"
										},
										{
											"begin": 2095,
											"end": 2114,
											"name": "POP"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "SWAP1"
										},
										{
											"begin": 2037,
											"end": 2119,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 425,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "REVERT"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "AND"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "DUP1"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SWAP1"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SLOAD"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SWAP1"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "EXP"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SWAP1"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "DIV"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "AND"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "AND"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "MLOAD"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "MLOAD"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "DUP1"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SWAP2"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SUB"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SWAP1"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "LOG3"
										},
										{
											"begin": 729,
											"end": 730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 712,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "EXP"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "SLOAD"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "MUL"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "NOT"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "AND"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "DUP4"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "AND"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "MUL"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "OR"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "SSTORE"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "JUMPDEST"
										},
										{
											"begin": 3695,
											"end": 3710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3768,
											"name": "DUP1"
										},
										{
											"begin": 3801,
											"end": 3815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 425,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "REVERT"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "SWAP1"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "SLOAD"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "SWAP1"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "EXP"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "SWAP1"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "DIV"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3646,
											"end": 3656,
											"name": "AND"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "ISZERO"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "ISZERO"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "JUMPI"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "DUP1"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "REVERT"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3638,
											"end": 3657,
											"name": "JUMPDEST"
										},
										{
											"begin": 3672,
											"end": 3680,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP6"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "AND"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "AND"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "DUP2"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "MSTORE"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "ADD"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "SWAP1"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "DUP2"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "MSTORE"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "ADD"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "KECCAK256"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "SWAP1"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "SLOAD"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "SWAP1"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "EXP"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "SWAP1"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "DIV"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "AND"
										},
										{
											"begin": 3671,
											"end": 3687,
											"name": "ISZERO"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "ISZERO"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "ISZERO"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "JUMPI"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "REVERT"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "JUMPDEST"
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "DUP4"
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "AND"
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 3737,
											"end": 3741,
											"name": "ADDRESS"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP3"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "AND"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MUL"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP2"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MSTORE"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ADD"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP3"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "AND"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "AND"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP2"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MSTORE"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ADD"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP2"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP4"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SUB"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP2"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP8"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "GAS"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "CALL"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP2"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ADD"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP1"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP1"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ADD"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP1"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP3"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP2"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP1"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3695,
											"end": 3743,
											"name": "SWAP3"
										},
										{
											"begin": 3695,
											"end": 3743,
											"name": "POP"
										},
										{
											"begin": 3771,
											"end": 3795,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3789,
											"end": 3794,
											"name": "DUP5"
										},
										{
											"begin": 3771,
											"end": 3788,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 3771,
											"end": 3795,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 3795,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3771,
											"end": 3795,
											"name": "JUMPDEST"
										},
										{
											"begin": 3750,
											"end": 3795,
											"name": "SWAP2"
										},
										{
											"begin": 3750,
											"end": 3795,
											"name": "POP"
										},
										{
											"begin": 3818,
											"end": 3841,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP3"
										},
										{
											"begin": 3818,
											"end": 3825,
											"name": "DUP5"
										},
										{
											"begin": 3818,
											"end": 3829,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 3818,
											"end": 3829,
											"name": "SWAP1"
										},
										{
											"begin": 3818,
											"end": 3841,
											"name": "SWAP2"
										},
										{
											"begin": 3818,
											"end": 3841,
											"name": "SWAP1"
										},
										{
											"begin": 3818,
											"end": 3841,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3841,
											"name": "AND"
										},
										{
											"begin": 3818,
											"end": 3841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3841,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 3818,
											"end": 3841,
											"name": "JUMPDEST"
										},
										{
											"begin": 3801,
											"end": 3841,
											"name": "SWAP1"
										},
										{
											"begin": 3801,
											"end": 3841,
											"name": "POP"
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3848,
											"end": 3856,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3862,
											"name": "DUP7"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "AND"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "AND"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "DUP2"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "MSTORE"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "ADD"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "SWAP1"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "DUP2"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "MSTORE"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "ADD"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "KECCAK256"
										},
										{
											"begin": 3848,
											"end": 3863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "EXP"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "DUP2"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "SLOAD"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "DUP2"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "MUL"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "NOT"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "AND"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "SWAP1"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "DUP4"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "ISZERO"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "ISZERO"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "MUL"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "OR"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "SWAP1"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "SSTORE"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "POP"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 3896,
											"end": 3901,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "JUMPDEST"
										},
										{
											"begin": 3905,
											"end": 3911,
											"name": "DUP3"
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "DUP7"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "AND"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "SWAP3"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "SWAP2"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "SWAP1"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "AND"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 3877,
											"end": 3912,
											"name": "JUMPDEST"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "PUSH",
											"value": "39983C6D4D174A7AEE564F449D4A5C3C7AC9649D72B7793C56901183996F8AF6"
										},
										{
											"begin": 3944,
											"end": 3949,
											"name": "DUP5"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "MLOAD"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP1"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP3"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "AND"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "AND"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP2"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "MSTORE"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "ADD"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "SWAP2"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "POP"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "POP"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "MLOAD"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP1"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "SWAP2"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "SUB"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "SWAP1"
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "LOG1"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "POP"
										},
										{
											"begin": 3585,
											"end": 3955,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "JUMPDEST"
										},
										{
											"begin": 2635,
											"end": 2639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "SWAP1"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "SLOAD"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "SWAP1"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "EXP"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "SWAP1"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "DIV"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "AND"
										},
										{
											"begin": 2647,
											"end": 2664,
											"name": "SWAP1"
										},
										{
											"begin": 2647,
											"end": 2664,
											"name": "POP"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "SWAP1"
										},
										{
											"begin": 2594,
											"end": 2669,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "SLOAD"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "EXP"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "DIV"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 369,
											"name": "SWAP1"
										},
										{
											"begin": 356,
											"end": 369,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SWAP1"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "SLOAD"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "EXP"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "DIV"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 563,
											"end": 573,
											"name": "CALLER"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "EQ"
										},
										{
											"begin": 556,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 556,
											"end": 583,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "JUMPDEST"
										},
										{
											"begin": 2785,
											"end": 2792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2816,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "DUP4"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "AND"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "AND"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "DUP2"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "MSTORE"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "ADD"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SWAP1"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "DUP2"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "MSTORE"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "ADD"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "KECCAK256"
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SLOAD"
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "SWAP1"
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP2"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "SWAP1"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2828,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "JUMPDEST"
										},
										{
											"begin": 2358,
											"end": 2365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "SLOAD"
										},
										{
											"begin": 2373,
											"end": 2386,
											"name": "SWAP1"
										},
										{
											"begin": 2373,
											"end": 2386,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2391,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 425,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "REVERT"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 848,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "AND"
										},
										{
											"begin": 828,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "AND"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "EQ"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "ISZERO"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ISZERO"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ISZERO"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "JUMPI"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MLOAD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP3"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SUB"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP3"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "POP"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SWAP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "POP"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "POP"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MLOAD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SWAP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SUB"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SWAP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "REVERT"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "JUMPDEST"
										},
										{
											"begin": 938,
											"end": 946,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "AND"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "SLOAD"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "EXP"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "DIV"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "AND"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "AND"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "SUB"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "LOG3"
										},
										{
											"begin": 967,
											"end": 975,
											"name": "DUP1"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP1"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "EXP"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "DUP2"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "SLOAD"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "DUP2"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "MUL"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "NOT"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "AND"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "SWAP1"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "DUP4"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "AND"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "MUL"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "OR"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "SWAP1"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "SSTORE"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "JUMPDEST"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2966,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2972,
											"name": "DUP4"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "AND"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "AND"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "DUP2"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "MSTORE"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "ADD"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "SWAP1"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "DUP2"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "MSTORE"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "ADD"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "KECCAK256"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "SWAP1"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "SLOAD"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "SWAP1"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "EXP"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "SWAP1"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "DIV"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "AND"
										},
										{
											"begin": 2951,
											"end": 2973,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 2973,
											"name": "POP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP2"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "SWAP1"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "POP"
										},
										{
											"begin": 2887,
											"end": 2978,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4109,
											"end": 4241,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 4109,
											"end": 4241,
											"name": "JUMPDEST"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4236,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 4219,
											"end": 4228,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4229,
											"end": 4234,
											"name": "DUP5"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "AND"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "AND"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "DUP2"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "MSTORE"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "ADD"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "SWAP1"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "DUP2"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "MSTORE"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "ADD"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "KECCAK256"
										},
										{
											"begin": 4219,
											"end": 4235,
											"name": "SLOAD"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 4208,
											"end": 4213,
											"name": "DUP5"
										},
										{
											"begin": 4194,
											"end": 4207,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "JUMPDEST"
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "SWAP1"
										},
										{
											"begin": 4194,
											"end": 4236,
											"name": "SWAP2"
										},
										{
											"begin": 4194,
											"end": 4236,
											"name": "SWAP1"
										},
										{
											"begin": 4194,
											"end": 4236,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4194,
											"end": 4236,
											"name": "AND"
										},
										{
											"begin": 4194,
											"end": 4236,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4194,
											"end": 4236,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 4194,
											"end": 4236,
											"name": "JUMPDEST"
										},
										{
											"begin": 4187,
											"end": 4236,
											"name": "SWAP1"
										},
										{
											"begin": 4187,
											"end": 4236,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4241,
											"name": "SWAP2"
										},
										{
											"begin": 4109,
											"end": 4241,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4241,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4241,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 631,
											"end": 810,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 631,
											"end": 810,
											"name": "JUMPDEST"
										},
										{
											"begin": 689,
											"end": 696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 709,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 725,
											"end": 726,
											"name": "DUP3"
										},
										{
											"begin": 721,
											"end": 722,
											"name": "DUP5"
										},
										{
											"begin": 721,
											"end": 726,
											"name": "ADD"
										},
										{
											"begin": 709,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 709,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 750,
											"end": 751,
											"name": "DUP4"
										},
										{
											"begin": 745,
											"end": 746,
											"name": "DUP2"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "LT"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "ISZERO"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "ISZERO"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "ISZERO"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "JUMPI"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "MLOAD"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP3"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "SUB"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP3"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "MLOAD"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "SUB"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "REVERT"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 737,
											"end": 783,
											"name": "JUMPDEST"
										},
										{
											"begin": 801,
											"end": 802,
											"name": "DUP1"
										},
										{
											"begin": 794,
											"end": 802,
											"name": "SWAP2"
										},
										{
											"begin": 794,
											"end": 802,
											"name": "POP"
										},
										{
											"begin": 631,
											"end": 810,
											"name": "POP"
										},
										{
											"begin": 631,
											"end": 810,
											"name": "SWAP3"
										},
										{
											"begin": 631,
											"end": 810,
											"name": "SWAP2"
										},
										{
											"begin": 631,
											"end": 810,
											"name": "POP"
										},
										{
											"begin": 631,
											"end": 810,
											"name": "POP"
										},
										{
											"begin": 631,
											"end": 810,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 301,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 146,
											"end": 301,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP3"
										},
										{
											"begin": 237,
											"end": 251,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 251,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 251,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 252,
											"end": 254,
											"name": "DUP4"
										},
										{
											"begin": 256,
											"end": 261,
											"name": "DUP4"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "MLOAD"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP4"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "MUL"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP2"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "MSTORE"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP4"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "AND"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP2"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "MSTORE"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP3"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP2"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "MSTORE"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "SWAP3"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "MLOAD"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP4"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "SUB"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP2"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP8"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "GAS"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "CALL"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "MLOAD"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP2"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "MLOAD"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "ADD"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "SWAP3"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "SWAP2"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "SWAP1"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 237,
											"end": 262,
											"name": "POP"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "ISZERO"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "ISZERO"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "MLOAD"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP2"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "MSTORE"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "ADD"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP1"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP1"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "ADD"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP3"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP2"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "SUB"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP3"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "MSTORE"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP2"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "MSTORE"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "ADD"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP1"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH",
											"value": "5361666545524332303A207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP2"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "MSTORE"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "POP"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "ADD"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "SWAP2"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "POP"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "POP"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "MLOAD"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "DUP1"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "SWAP2"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "SUB"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "SWAP1"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "REVERT"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 229,
											"end": 293,
											"name": "JUMPDEST"
										},
										{
											"begin": 146,
											"end": 301,
											"name": "POP"
										},
										{
											"begin": 146,
											"end": 301,
											"name": "POP"
										},
										{
											"begin": 146,
											"end": 301,
											"name": "POP"
										},
										{
											"begin": 146,
											"end": 301,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 465,
											"end": 623,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 465,
											"end": 623,
											"name": "JUMPDEST"
										},
										{
											"begin": 523,
											"end": 530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 556,
											"end": 557,
											"name": "DUP3"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "DUP3"
										},
										{
											"begin": 551,
											"end": 557,
											"name": "GT"
										},
										{
											"begin": 551,
											"end": 557,
											"name": "ISZERO"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "ISZERO"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "ISZERO"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "JUMPI"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "MLOAD"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP2"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "MSTORE"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "ADD"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "ADD"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP3"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP2"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "SUB"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP3"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "MSTORE"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP2"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "MSTORE"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "ADD"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP2"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "MSTORE"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "POP"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "ADD"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "SWAP2"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "POP"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "POP"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "MLOAD"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "DUP1"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "SWAP2"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "SUB"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "SWAP1"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "REVERT"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 543,
											"end": 592,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 615,
											"name": "DUP2"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "DUP4"
										},
										{
											"begin": 610,
											"end": 615,
											"name": "SUB"
										},
										{
											"begin": 603,
											"end": 615,
											"name": "SWAP1"
										},
										{
											"begin": 603,
											"end": 615,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 623,
											"name": "SWAP3"
										},
										{
											"begin": 465,
											"end": 623,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 623,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "JUMPDEST"
										},
										{
											"begin": 4425,
											"end": 4432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4462,
											"name": "DUP1"
										},
										{
											"begin": 4492,
											"end": 4512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4470,
											"name": "DUP4"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "AND"
										},
										{
											"begin": 4465,
											"end": 4480,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4481,
											"end": 4485,
											"name": "ADDRESS"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "MLOAD"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP3"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "AND"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "MUL"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP2"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "MSTORE"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "ADD"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP1"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP3"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "AND"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "AND"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP2"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "MSTORE"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "ADD"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "SWAP2"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "MLOAD"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP1"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP4"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "SUB"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP2"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP8"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP1"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "GAS"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "CALL"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "MLOAD"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP2"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "ADD"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "SWAP1"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP1"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "DUP1"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "MLOAD"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "SWAP1"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "ADD"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "SWAP1"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "SWAP3"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "SWAP2"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "SWAP1"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4465,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4440,
											"end": 4486,
											"name": "SWAP2"
										},
										{
											"begin": 4440,
											"end": 4486,
											"name": "POP"
										},
										{
											"begin": 4515,
											"end": 4551,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4549,
											"name": "DUP7"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "AND"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "AND"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "DUP2"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "MSTORE"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "ADD"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "SWAP1"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "DUP2"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "MSTORE"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "ADD"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "KECCAK256"
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "SLOAD"
										},
										{
											"begin": 4515,
											"end": 4529,
											"name": "DUP4"
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4515,
											"end": 4533,
											"name": "SWAP1"
										},
										{
											"begin": 4515,
											"end": 4551,
											"name": "SWAP2"
										},
										{
											"begin": 4515,
											"end": 4551,
											"name": "SWAP1"
										},
										{
											"begin": 4515,
											"end": 4551,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4515,
											"end": 4551,
											"name": "AND"
										},
										{
											"begin": 4515,
											"end": 4551,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 4551,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 4515,
											"end": 4551,
											"name": "JUMPDEST"
										},
										{
											"begin": 4492,
											"end": 4551,
											"name": "SWAP1"
										},
										{
											"begin": 4492,
											"end": 4551,
											"name": "POP"
										},
										{
											"begin": 4580,
											"end": 4586,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4580,
											"end": 4586,
											"name": "SLOAD"
										},
										{
											"begin": 4562,
											"end": 4577,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4562,
											"end": 4586,
											"name": "LT"
										},
										{
											"begin": 4558,
											"end": 4804,
											"name": "ISZERO"
										},
										{
											"begin": 4558,
											"end": 4804,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 4558,
											"end": 4804,
											"name": "JUMPI"
										},
										{
											"begin": 4603,
											"end": 4604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "SWAP3"
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "POP"
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "JUMP"
										},
										{
											"begin": 4558,
											"end": 4804,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4558,
											"end": 4804,
											"name": "JUMPDEST"
										},
										{
											"begin": 4640,
											"end": 4661,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 4651,
											"end": 4660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4651,
											"end": 4660,
											"name": "SLOAD"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "SLOAD"
										},
										{
											"begin": 4640,
											"end": 4650,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4640,
											"end": 4650,
											"name": "SWAP1"
										},
										{
											"begin": 4640,
											"end": 4661,
											"name": "SWAP2"
										},
										{
											"begin": 4640,
											"end": 4661,
											"name": "SWAP1"
										},
										{
											"begin": 4640,
											"end": 4661,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4640,
											"end": 4661,
											"name": "AND"
										},
										{
											"begin": 4640,
											"end": 4661,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4661,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 4640,
											"end": 4661,
											"name": "JUMPDEST"
										},
										{
											"begin": 4621,
											"end": 4636,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4621,
											"end": 4661,
											"name": "LT"
										},
										{
											"begin": 4621,
											"end": 4661,
											"name": "ISZERO"
										},
										{
											"begin": 4621,
											"end": 4680,
											"name": "DUP1"
										},
										{
											"begin": 4621,
											"end": 4680,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 4621,
											"end": 4680,
											"name": "JUMPI"
										},
										{
											"begin": 4621,
											"end": 4680,
											"name": "POP"
										},
										{
											"begin": 4665,
											"end": 4673,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4679,
											"name": "DUP6"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "AND"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "AND"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "DUP2"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "MSTORE"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "ADD"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "SWAP1"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "DUP2"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "MSTORE"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "ADD"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "KECCAK256"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "SWAP1"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "SLOAD"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "SWAP1"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "EXP"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "SWAP1"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "DIV"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "AND"
										},
										{
											"begin": 4621,
											"end": 4680,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 4621,
											"end": 4680,
											"name": "JUMPDEST"
										},
										{
											"begin": 4617,
											"end": 4804,
											"name": "ISZERO"
										},
										{
											"begin": 4617,
											"end": 4804,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4617,
											"end": 4804,
											"name": "JUMPI"
										},
										{
											"begin": 4697,
											"end": 4709,
											"name": "DUP1"
										},
										{
											"begin": 4690,
											"end": 4709,
											"name": "SWAP3"
										},
										{
											"begin": 4690,
											"end": 4709,
											"name": "POP"
										},
										{
											"begin": 4690,
											"end": 4709,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 4690,
											"end": 4709,
											"name": "JUMP"
										},
										{
											"begin": 4617,
											"end": 4804,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4617,
											"end": 4804,
											"name": "JUMPDEST"
										},
										{
											"begin": 4737,
											"end": 4797,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SLOAD"
										},
										{
											"begin": 4737,
											"end": 4782,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 4754,
											"end": 4781,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "SLOAD"
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4754,
											"end": 4773,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4754,
											"end": 4773,
											"name": "SWAP1"
										},
										{
											"begin": 4754,
											"end": 4781,
											"name": "SWAP2"
										},
										{
											"begin": 4754,
											"end": 4781,
											"name": "SWAP1"
										},
										{
											"begin": 4754,
											"end": 4781,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4754,
											"end": 4781,
											"name": "AND"
										},
										{
											"begin": 4754,
											"end": 4781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4781,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 4754,
											"end": 4781,
											"name": "JUMPDEST"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "DUP5"
										},
										{
											"begin": 4737,
											"end": 4753,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 4737,
											"end": 4753,
											"name": "SWAP1"
										},
										{
											"begin": 4737,
											"end": 4782,
											"name": "SWAP2"
										},
										{
											"begin": 4737,
											"end": 4782,
											"name": "SWAP1"
										},
										{
											"begin": 4737,
											"end": 4782,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4737,
											"end": 4782,
											"name": "AND"
										},
										{
											"begin": 4737,
											"end": 4782,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4782,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 4737,
											"end": 4782,
											"name": "JUMPDEST"
										},
										{
											"begin": 4737,
											"end": 4786,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 4737,
											"end": 4786,
											"name": "SWAP1"
										},
										{
											"begin": 4737,
											"end": 4797,
											"name": "SWAP2"
										},
										{
											"begin": 4737,
											"end": 4797,
											"name": "SWAP1"
										},
										{
											"begin": 4737,
											"end": 4797,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4737,
											"end": 4797,
											"name": "AND"
										},
										{
											"begin": 4737,
											"end": 4797,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4797,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 4737,
											"end": 4797,
											"name": "JUMPDEST"
										},
										{
											"begin": 4730,
											"end": 4797,
											"name": "SWAP3"
										},
										{
											"begin": 4730,
											"end": 4797,
											"name": "POP"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "JUMPDEST"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "POP"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "POP"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "SWAP2"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "SWAP1"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "POP"
										},
										{
											"begin": 4366,
											"end": 4808,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "JUMPDEST"
										},
										{
											"begin": 110,
											"end": 117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 161,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 134,
											"end": 135,
											"name": "DUP5"
										},
										{
											"begin": 134,
											"end": 140,
											"name": "EQ"
										},
										{
											"begin": 130,
											"end": 150,
											"name": "ISZERO"
										},
										{
											"begin": 130,
											"end": 150,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 130,
											"end": 150,
											"name": "JUMPI"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 142,
											"end": 150,
											"name": "SWAP2"
										},
										{
											"begin": 142,
											"end": 150,
											"name": "POP"
										},
										{
											"begin": 142,
											"end": 150,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 142,
											"end": 150,
											"name": "JUMP"
										},
										{
											"begin": 130,
											"end": 150,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 130,
											"end": 150,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 178,
											"name": "DUP3"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "DUP5"
										},
										{
											"begin": 173,
											"end": 178,
											"name": "MUL"
										},
										{
											"begin": 161,
											"end": 178,
											"name": "SWAP1"
										},
										{
											"begin": 161,
											"end": 178,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 207,
											"name": "DUP3"
										},
										{
											"begin": 201,
											"end": 202,
											"name": "DUP5"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP3"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "ISZERO"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "ISZERO"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "JUMPI"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "INVALID"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "JUMPDEST"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "DIV"
										},
										{
											"begin": 197,
											"end": 207,
											"name": "EQ"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "ISZERO"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "ISZERO"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "JUMPI"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "MLOAD"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP2"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "MSTORE"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "ADD"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "ADD"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP3"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP2"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "SUB"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP3"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "MSTORE"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP2"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "MSTORE"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "ADD"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP2"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "MSTORE"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "ADD"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP2"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "MSTORE"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "POP"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "ADD"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "SWAP2"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "POP"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "POP"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "MLOAD"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "DUP1"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "SWAP2"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "SUB"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "SWAP1"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "REVERT"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 189,
											"end": 245,
											"name": "JUMPDEST"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1"
										},
										{
											"begin": 256,
											"end": 264,
											"name": "SWAP2"
										},
										{
											"begin": 256,
											"end": 264,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "JUMPDEST"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "SWAP3"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "SWAP2"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 272,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 280,
											"end": 457,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 280,
											"end": 457,
											"name": "JUMPDEST"
										},
										{
											"begin": 338,
											"end": 345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 413,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 371,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 366,
											"end": 367,
											"name": "DUP4"
										},
										{
											"begin": 366,
											"end": 371,
											"name": "GT"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "ISZERO"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "ISZERO"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "JUMPI"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "SUB"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "SUB"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "REVERT"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 358,
											"end": 402,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP5"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "ISZERO"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "ISZERO"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "JUMPI"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "INVALID"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DIV"
										},
										{
											"begin": 413,
											"end": 430,
											"name": "SWAP1"
										},
										{
											"begin": 413,
											"end": 430,
											"name": "POP"
										},
										{
											"begin": 448,
											"end": 449,
											"name": "DUP1"
										},
										{
											"begin": 441,
											"end": 449,
											"name": "SWAP2"
										},
										{
											"begin": 441,
											"end": 449,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 457,
											"name": "SWAP3"
										},
										{
											"begin": 280,
											"end": 457,
											"name": "SWAP2"
										},
										{
											"begin": 280,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 457,
											"name": "POP"
										},
										{
											"begin": 280,
											"end": 457,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"cliff()": "13d033c0",
							"duration()": "0fb5a6b4",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"release(address)": "19165587",
							"released(address)": "9852595c",
							"renounceOwnership()": "715018a6",
							"revocable()": "872a7810",
							"revoke(address)": "74a8f103",
							"revoked(address)": "fa01dc06",
							"start()": "be9a6555",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"revocable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"revoked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"start\",\"type\":\"uint256\"},{\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"name\":\"duration\",\"type\":\"uint256\"},{\"name\":\"revocable\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenVestingRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"beneficiary()\":{\"return\":\"the beneficiary of the tokens.\"},\"cliff()\":{\"return\":\"the cliff time of the token vesting.\"},\"duration()\":{\"return\":\"the duration of the token vesting.\"},\"release(address)\":{\"params\":{\"token\":\"ERC20 token which is being vested\"}},\"released(address)\":{\"return\":\"the amount of the token released.\"},\"revocable()\":{\"return\":\"true if the vesting is revocable.\"},\"revoke(address)\":{\"params\":{\"token\":\"ERC20 token which is being vested\"}},\"revoked(address)\":{\"return\":\"true if the token is revoked.\"},\"start()\":{\"return\":\"the start time of the token vesting.\"}},\"title\":\"TokenVesting\"},\"userdoc\":{\"methods\":{\"release(address)\":{\"notice\":\"Transfers vested tokens to beneficiary.\"},\"revoke(address)\":{\"notice\":\"Allows the owner to revoke the vesting. Tokens already vested remain in the contract, the rest are returned to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/TokenVesting.sol\":\"TokenVesting\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenVesting.sol\":{\"keccak256\":\"0xcace4a867bfecfb483640b96c81895fbf35200bbfa668a6ab9186320c075dde1\",\"urls\":[\"bzzr://f7fd51f3cd1b55e1f9331a6b5b3ed848c2d914c0b9595e2757ea4d317260aa57\"]},\"contracts/math/SafeMath.sol\":{\"keccak256\":\"0x399cf91fc60d5cdb79244baec29c0ff0c40bdc158bc7bf4d1199857d1fb55a08\",\"urls\":[\"bzzr://eecf6a35cac014a1a4a61a2225b893a9ca0b2e8c42175bed1d9e713e4e6c85de\"]},\"contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0881cebbc62bad135d3a897e0890e7f85f7443c9f2425e1dd293810ee5a7c5d1\",\"urls\":[\"bzzr://1b17f3f86ed0e407574e3d6023ce183e6d2482c1877abd91972bad4c2f0aced6\"]},\"contracts/token/IERC20.sol\":{\"keccak256\":\"0x64878ec00a6cd78d6259f3f94a582b978f6c925e0b9a6adffc1e605632069974\",\"urls\":[\"bzzr://f36d7a1eb9b72be08858b8283e6d00cd33e7d31cec7a4998644e466c0ad76bee\"]},\"contracts/token/SafeERC20.sol\":{\"keccak256\":\"0xcc60ac84742febd00d14b932477697621a70c5bc2565938c41e6a4e8f6d8d550\",\"urls\":[\"bzzr://179c52bbe11f76c1edd863263b4bd2ee047be838fc5bc5077c6d5c291ecaa09a\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"release(address)": {
								"notice": "Transfers vested tokens to beneficiary."
							},
							"revoke(address)": {
								"notice": "Allows the owner to revoke the vesting. Tokens already vested remain in the contract, the rest are returned to the owner."
							}
						}
					}
				}
			},
			"contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/math/SafeMath.sol\":28:813  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/math/SafeMath.sol\":28:813  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820419dedd21764c72e839024f38faa1eb4439961d7cbb86b10936bc02ad48d35ec0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820419dedd21764c72e839024f38faa1eb4439961d7cbb86b10936bc02ad48d35ec0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 COINBASE SWAP14 0xed 0xd2 OR PUSH5 0xC72E839024 RETURN DUP16 0xaa 0x1e 0xb4 NUMBER SWAP10 PUSH2 0xD7CB 0xb8 PUSH12 0x10936BC02AD48D35EC002900 ",
							"sourceMap": "28:785:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820419dedd21764c72e839024f38faa1eb4439961d7cbb86b10936bc02ad48d35ec0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 COINBASE SWAP14 0xed 0xd2 OR PUSH5 0xC72E839024 RETURN DUP16 0xaa 0x1e 0xb4 NUMBER SWAP10 PUSH2 0xD7CB 0xb8 PUSH12 0x10936BC02AD48D35EC002900 ",
							"sourceMap": "28:785:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 813,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 813,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820419dedd21764c72e839024f38faa1eb4439961d7cbb86b10936bc02ad48d35ec0029",
									".code": [
										{
											"begin": 28,
											"end": 813,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 28,
											"end": 813,
											"name": "ADDRESS"
										},
										{
											"begin": 28,
											"end": 813,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 813,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 28,
											"end": 813,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 813,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 813,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/math/SafeMath.sol\":{\"keccak256\":\"0x399cf91fc60d5cdb79244baec29c0ff0c40bdc158bc7bf4d1199857d1fb55a08\",\"urls\":[\"bzzr://eecf6a35cac014a1a4a61a2225b893a9ca0b2e8c42175bed1d9e713e4e6c85de\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ownership/Ownable.sol\":28:986  contract Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ownership/Ownable.sol\":175:290  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ownership/Ownable.sol\":175:290  constructor() public {\r... */\n  pop\n    /* \"contracts/ownership/Ownable.sol\":216:226  msg.sender */\n  caller\n    /* \"contracts/ownership/Ownable.sol\":207:213  _owner */\n  0x0\n  dup1\n    /* \"contracts/ownership/Ownable.sol\":207:226  _owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ownership/Ownable.sol\":275:281  _owner */\n  0x0\n  dup1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownership/Ownable.sol\":242:282  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownership/Ownable.sol\":271:272  0 */\n  0x0\n    /* \"contracts/ownership/Ownable.sol\":242:282  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/ownership/Ownable.sol\":28:986  contract Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ownership/Ownable.sol\":28:986  contract Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x715018a6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/ownership/Ownable.sol\":599:739  function renounceOwnership() public onlyOwner {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"contracts/ownership/Ownable.sol\":599:739  function renounceOwnership() public onlyOwner {\r... */\n      pop\n      tag_7\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"contracts/ownership/Ownable.sol\":298:377  function owner() public view returns (address) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"contracts/ownership/Ownable.sol\":298:377  function owner() public view returns (address) {\r... */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownership/Ownable.sol\":499:591  function isOwner() public view returns (bool) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/ownership/Ownable.sol\":499:591  function isOwner() public view returns (bool) {\r... */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownership/Ownable.sol\":747:983  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/ownership/Ownable.sol\":747:983  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      tag_16\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_17)\n    tag_16:\n      stop\n        /* \"contracts/ownership/Ownable.sol\":599:739  function renounceOwnership() public onlyOwner {\r... */\n    tag_8:\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      tag_19\n        /* \"contracts/ownership/Ownable.sol\":425:432  isOwner */\n      tag_14\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      jump\t// in\n    tag_19:\n        /* \"contracts/ownership/Ownable.sol\":417:471  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_20\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/ownership/Ownable.sol\":698:699  0 */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":661:701  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":682:688  _owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":661:701  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownership/Ownable.sol\":729:730  0 */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":712:718  _owner */\n      dup1\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":712:731  _owner = address(0) */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownership/Ownable.sol\":599:739  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/ownership/Ownable.sol\":298:377  function owner() public view returns (address) {\r... */\n    tag_11:\n        /* \"contracts/ownership/Ownable.sol\":336:343  address */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":363:369  _owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":356:369  return _owner */\n      swap1\n      pop\n        /* \"contracts/ownership/Ownable.sol\":298:377  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownership/Ownable.sol\":499:591  function isOwner() public view returns (bool) {\r... */\n    tag_14:\n        /* \"contracts/ownership/Ownable.sol\":539:543  bool */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":577:583  _owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":563:583  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":563:573  msg.sender */\n      caller\n        /* \"contracts/ownership/Ownable.sol\":563:583  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ownership/Ownable.sol\":556:583  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/ownership/Ownable.sol\":499:591  function isOwner() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownership/Ownable.sol\":747:983  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_17:\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      tag_25\n        /* \"contracts/ownership/Ownable.sol\":425:432  isOwner */\n      tag_14\n        /* \"contracts/ownership/Ownable.sol\":425:434  isOwner() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/ownership/Ownable.sol\":417:471  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_26\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/ownership/Ownable.sol\":848:849  0 */\n      0x0\n        /* \"contracts/ownership/Ownable.sol\":828:850  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":828:836  newOwner */\n      dup2\n        /* \"contracts/ownership/Ownable.sol\":828:850  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ownership/Ownable.sol\":820:893  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      iszero\n      iszero\n      tag_28\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n      dup2\n      mstore\n      0x20\n      add\n      0x6464726573730000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"contracts/ownership/Ownable.sol\":938:946  newOwner */\n      dup1\n        /* \"contracts/ownership/Ownable.sol\":909:947  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":930:936  _owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownership/Ownable.sol\":909:947  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownership/Ownable.sol\":967:975  newOwner */\n      dup1\n        /* \"contracts/ownership/Ownable.sol\":958:964  _owner */\n      0x0\n      dup1\n        /* \"contracts/ownership/Ownable.sol\":958:975  _owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownership/Ownable.sol\":747:983  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582054d56adf795d3974967f8960f7afa76888a97d7d0e7319d53a133eb8a29baf3f0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610533806100dc6000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a6146100675780638da5cb5b1461007e5780638f32d59b146100d5578063f2fde38b14610104575b600080fd5b34801561007357600080fd5b5061007c610147565b005b34801561008a57600080fd5b50610093610282565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea6102ab565b604051808215151515815260200191505060405180910390f35b34801561011057600080fd5b50610145600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610302565b005b61014f6102ab565b15156101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b61030a6102ab565b151561037e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610449576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582054d56adf795d3974967f8960f7afa76888a97d7d0e7319d53a133eb8a29baf3f0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x533 DUP1 PUSH2 0xDC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH2 0x147 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x302 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x2AB JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x30A PUSH2 0x2AB JUMP JUMPDEST ISZERO ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SLOAD 0xd5 PUSH11 0xDF795D3974967F8960F7AF 0xa7 PUSH9 0x88A97D7D0E7319D53A SGT RETURNDATACOPY 0xb8 LOG2 SWAP12 0xaf 0x3f STOP 0x29 ",
							"sourceMap": "28:958:2:-;;;175:115;8:9:-1;5:2;;;30:1;27;20:12;5:2;175:115:2;216:10;207:6;;:19;;;;;;;;;;;;;;;;;;275:6;;;;;;;;;;;242:40;;271:1;242:40;;;;;;;;;;;;28:958;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a6146100675780638da5cb5b1461007e5780638f32d59b146100d5578063f2fde38b14610104575b600080fd5b34801561007357600080fd5b5061007c610147565b005b34801561008a57600080fd5b50610093610282565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea6102ab565b604051808215151515815260200191505060405180910390f35b34801561011057600080fd5b50610145600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610302565b005b61014f6102ab565b15156101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b61030a6102ab565b151561037e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610449576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582054d56adf795d3974967f8960f7afa76888a97d7d0e7319d53a133eb8a29baf3f0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH2 0x147 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x302 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x2AB JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x30A PUSH2 0x2AB JUMP JUMPDEST ISZERO ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SLOAD 0xd5 PUSH11 0xDF795D3974967F8960F7AF 0xa7 PUSH9 0x88A97D7D0E7319D53A SGT RETURNDATACOPY 0xb8 LOG2 SWAP12 0xaf 0x3f STOP 0x29 ",
							"sourceMap": "28:958:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;599:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;599:140:2;;;;;;298:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;298:79:2;;;;;;;;;;;;;;;;;;;;;;;;;;;499:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:92:2;;;;;;;;;;;;;;;;;;;;;;;;;;;747:236;;8:9:-1;5:2;;;30:1;27;20:12;5:2;747:236:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;599:140;425:9;:7;:9::i;:::-;417:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:1;661:40;;682:6;;;;;;;;;;;661:40;;;;;;;;;;;;729:1;712:6;;:19;;;;;;;;;;;;;;;;;;599:140::o;298:79::-;336:7;363:6;;;;;;;;;;;356:13;;298:79;:::o;499:92::-;539:4;577:6;;;;;;;;;;;563:20;;:10;:20;;;556:27;;499:92;:::o;747:236::-;425:9;:7;:9::i;:::-;417:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:1;828:22;;:8;:22;;;;820:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:8;909:38;;930:6;;;;;;;;;;;909:38;;;;;;;;;;;;967:8;958:6;;:17;;;;;;;;;;;;;;;;;;747:236;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "266200",
								"executionCost": "22353",
								"totalCost": "288553"
							},
							"external": {
								"isOwner()": "511",
								"owner()": "472",
								"renounceOwnership()": "22492",
								"transferOwnership(address)": "22666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 986,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 28,
									"end": 986,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 986,
									"name": "MSTORE"
								},
								{
									"begin": 175,
									"end": 290,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 175,
									"end": 290,
									"name": "POP"
								},
								{
									"begin": 216,
									"end": 226,
									"name": "CALLER"
								},
								{
									"begin": 207,
									"end": 213,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 207,
									"end": 213,
									"name": "DUP1"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "EXP"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "DUP2"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "SLOAD"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "DUP2"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "MUL"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "NOT"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "AND"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "SWAP1"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "DUP4"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "AND"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "MUL"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "OR"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "SWAP1"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "SSTORE"
								},
								{
									"begin": 207,
									"end": 226,
									"name": "POP"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "DUP1"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "SLOAD"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "EXP"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "DIV"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "AND"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "AND"
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "AND"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "MLOAD"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "MLOAD"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "SWAP2"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "SUB"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "SWAP1"
								},
								{
									"begin": 242,
									"end": 282,
									"name": "LOG3"
								},
								{
									"begin": 28,
									"end": 986,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 986,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 986,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 986,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 986,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 986,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 986,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582054d56adf795d3974967f8960f7afa76888a97d7d0e7319d53a133eb8a29baf3f0029",
									".code": [
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "LT"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "DIV"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "AND"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "JUMPDEST"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 986,
											"name": "REVERT"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "POP"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMP"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "STOP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMPDEST"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMPDEST"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "MLOAD"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "DUP3"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "AND"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "AND"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "DUP2"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "MSTORE"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "ADD"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SWAP2"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "MLOAD"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SWAP2"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SUB"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SWAP1"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "RETURN"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "MLOAD"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "DUP3"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ISZERO"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "DUP2"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "MSTORE"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "ADD"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SWAP2"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "MLOAD"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SWAP2"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SUB"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "RETURN"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SUB"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "DUP2"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "AND"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP3"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP2"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "STOP"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 425,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "REVERT"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "AND"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "DUP1"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SWAP1"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SLOAD"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SWAP1"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "EXP"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "SWAP1"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "DIV"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "AND"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "AND"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "MLOAD"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "MLOAD"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "DUP1"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SWAP2"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SUB"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SWAP1"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "LOG3"
										},
										{
											"begin": 729,
											"end": 730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 712,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "EXP"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "SLOAD"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "MUL"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "NOT"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "AND"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "DUP4"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "AND"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "MUL"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "OR"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "SSTORE"
										},
										{
											"begin": 712,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 599,
											"end": 739,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMPDEST"
										},
										{
											"begin": 336,
											"end": 343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "DUP1"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "SLOAD"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "EXP"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "DIV"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 369,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 369,
											"name": "SWAP1"
										},
										{
											"begin": 356,
											"end": 369,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "SWAP1"
										},
										{
											"begin": 298,
											"end": 377,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "SLOAD"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "EXP"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "DIV"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 563,
											"end": 573,
											"name": "CALLER"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "EQ"
										},
										{
											"begin": 556,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 556,
											"end": 583,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 591,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 425,
											"end": 432,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ISZERO"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPI"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP3"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MSTORE"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "ADD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "POP"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "MLOAD"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "DUP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP2"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SUB"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "REVERT"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 417,
											"end": 471,
											"name": "JUMPDEST"
										},
										{
											"begin": 848,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "AND"
										},
										{
											"begin": 828,
											"end": 836,
											"name": "DUP2"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "AND"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "EQ"
										},
										{
											"begin": 828,
											"end": 850,
											"name": "ISZERO"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ISZERO"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ISZERO"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "JUMPI"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MLOAD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP3"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SUB"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP3"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "POP"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "ADD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SWAP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "POP"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "POP"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "MLOAD"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SWAP2"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SUB"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "SWAP1"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "REVERT"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 820,
											"end": 893,
											"name": "JUMPDEST"
										},
										{
											"begin": 938,
											"end": 946,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "AND"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "SLOAD"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "EXP"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "DIV"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "AND"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "AND"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "MLOAD"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "SWAP2"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "SUB"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 909,
											"end": 947,
											"name": "LOG3"
										},
										{
											"begin": 967,
											"end": 975,
											"name": "DUP1"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP1"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "EXP"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "DUP2"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "SLOAD"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "DUP2"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "MUL"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "NOT"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "AND"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "SWAP1"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "DUP4"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "AND"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "MUL"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "OR"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "SWAP1"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "SSTORE"
										},
										{
											"begin": 958,
											"end": 975,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 983,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0881cebbc62bad135d3a897e0890e7f85f7443c9f2425e1dd293810ee5a7c5d1\",\"urls\":[\"bzzr://1b17f3f86ed0e407574e3d6023ce183e6d2482c1877abd91972bad4c2f0aced6\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/token/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/token/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/token/SafeERC20.sol\":86:832  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/SafeERC20.sol\":86:832  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820291bcfba42a043c7abf2bedb2f0501c28f2502c8398832bafa5862a185e4b3140029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820291bcfba42a043c7abf2bedb2f0501c28f2502c8398832bafa5862a185e4b3140029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x29 SHL 0xcf 0xba TIMESTAMP LOG0 NUMBER 0xc7 0xab CALLCODE 0xbe 0xdb 0x2f SDIV ADD 0xc2 DUP16 0x25 MUL 0xc8 CODECOPY DUP9 ORIGIN 0xba STATICCALL PC PUSH3 0xA185E4 0xb3 EQ STOP 0x29 ",
							"sourceMap": "86:746:4:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820291bcfba42a043c7abf2bedb2f0501c28f2502c8398832bafa5862a185e4b3140029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x29 SHL 0xcf 0xba TIMESTAMP LOG0 NUMBER 0xc7 0xab CALLCODE 0xbe 0xdb 0x2f SDIV ADD 0xc2 DUP16 0x25 MUL 0xc8 CODECOPY DUP9 ORIGIN 0xba STATICCALL PC PUSH3 0xA185E4 0xb3 EQ STOP 0x29 ",
							"sourceMap": "86:746:4:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 86,
									"end": 832,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 832,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820291bcfba42a043c7abf2bedb2f0501c28f2502c8398832bafa5862a185e4b3140029",
									".code": [
										{
											"begin": 86,
											"end": 832,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 86,
											"end": 832,
											"name": "ADDRESS"
										},
										{
											"begin": 86,
											"end": 832,
											"name": "EQ"
										},
										{
											"begin": 86,
											"end": 832,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 86,
											"end": 832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 86,
											"end": 832,
											"name": "MSTORE"
										},
										{
											"begin": 86,
											"end": 832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 86,
											"end": 832,
											"name": "DUP1"
										},
										{
											"begin": 86,
											"end": 832,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/token/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/math/SafeMath.sol\":{\"keccak256\":\"0x399cf91fc60d5cdb79244baec29c0ff0c40bdc158bc7bf4d1199857d1fb55a08\",\"urls\":[\"bzzr://eecf6a35cac014a1a4a61a2225b893a9ca0b2e8c42175bed1d9e713e4e6c85de\"]},\"contracts/token/IERC20.sol\":{\"keccak256\":\"0x64878ec00a6cd78d6259f3f94a582b978f6c925e0b9a6adffc1e605632069974\",\"urls\":[\"bzzr://f36d7a1eb9b72be08858b8283e6d00cd33e7d31cec7a4998644e466c0ad76bee\"]},\"contracts/token/SafeERC20.sol\":{\"keccak256\":\"0xcc60ac84742febd00d14b932477697621a70c5bc2565938c41e6a4e8f6d8d550\",\"urls\":[\"bzzr://179c52bbe11f76c1edd863263b4bd2ee047be838fc5bc5077c6d5c291ecaa09a\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/TokenVesting.sol": {
				"ast": {
					"absolutePath": "contracts/TokenVesting.sol",
					"exportedSymbols": {
						"TokenVesting": [
							350
						]
					},
					"id": 351,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "48:24:0"
						},
						{
							"absolutePath": "contracts/ownership/Ownable.sol",
							"file": "./ownership/Ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 351,
							"sourceUnit": 559,
							"src": "74:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/math/SafeMath.sol",
							"file": "./math/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 351,
							"sourceUnit": 458,
							"src": "108:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/SafeERC20.sol",
							"file": "./token/SafeERC20.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 351,
							"sourceUnit": 715,
							"src": "138:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/IERC20.sol",
							"file": "./token/IERC20.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 351,
							"sourceUnit": 628,
							"src": "170:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 6,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 558,
										"src": "439:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$558",
											"typeString": "contract Ownable"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "439:7:0"
								}
							],
							"contractDependencies": [
								558
							],
							"contractKind": "contract",
							"documentation": "@title TokenVesting\n@dev A token holder contract that can release its token balance gradually like a\ntypical vesting scheme, with a cliff and vesting period. Optionally revocable by the\nowner.",
							"fullyImplemented": true,
							"id": 350,
							"linearizedBaseContracts": [
								350,
								558
							],
							"name": "TokenVesting",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 10,
									"libraryName": {
										"contractScope": null,
										"id": 8,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 457,
										"src": "457:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$457",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "451:27:0",
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 13,
									"libraryName": {
										"contractScope": null,
										"id": 11,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 714,
										"src": "487:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$714",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "481:27:0",
									"typeName": {
										"contractScope": null,
										"id": 12,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 627,
										"src": "501:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$627",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 19,
									"name": "TokensReleased",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "533:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "548:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "532:31:0"
									},
									"src": "512:52:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 23,
									"name": "TokenVestingRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "593:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "592:15:0"
									},
									"src": "567:41:0"
								},
								{
									"constant": false,
									"id": 25,
									"name": "_beneficiary",
									"nodeType": "VariableDeclaration",
									"scope": 350,
									"src": "663:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 24,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"name": "_cliff",
									"nodeType": "VariableDeclaration",
									"scope": 350,
									"src": "696:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "696:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"name": "_start",
									"nodeType": "VariableDeclaration",
									"scope": 350,
									"src": "722:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"name": "_duration",
									"nodeType": "VariableDeclaration",
									"scope": 350,
									"src": "748:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "748:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"name": "_revocable",
									"nodeType": "VariableDeclaration",
									"scope": 350,
									"src": "778:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 32,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "778:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 37,
									"name": "_released",
									"nodeType": "VariableDeclaration",
									"scope": 350,
									"src": "806:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "815:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "806:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "826:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 41,
									"name": "_revoked",
									"nodeType": "VariableDeclaration",
									"scope": 350,
									"src": "856:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 40,
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "865:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "856:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 39,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "876:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1667:310:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "1681:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1704:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1696:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1696:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1681:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 732,
														"src": "1673:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1673:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1673:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "cliffDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1721:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 64,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1738:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1721:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 732,
														"src": "1713:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1713:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1713:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 69,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1761:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1772:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1761:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 732,
														"src": "1753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1753:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "1753:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 77,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "1798:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 75,
																		"name": "start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "1788:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 456,
																	"src": "1788:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1788:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 79,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "1810:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1810:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1788:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 732,
														"src": "1780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1780:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1780:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 84,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1833:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 85,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1848:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1833:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1833:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 88,
														"name": "_revocable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1865:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 89,
														"name": "revocable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1878:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1865:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1865:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 92,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1893:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 93,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1905:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1893:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1893:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 96,
														"name": "_cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1919:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 99,
																"name": "cliffDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1938:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 97,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1928:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 456,
															"src": "1928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1928:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1919:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1919:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1958:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1967:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1958:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1958:14:0"
											}
										]
									},
									"documentation": "@dev Creates a vesting contract that vests its balance of any ERC20 token to the\nbeneficiary, gradually in a linear fashion until start + duration. By then all\nof the balance will have vested.\n@param beneficiary address of the beneficiary to whom vested tokens are transferred\n@param cliffDuration duration in seconds of the cliff in which tokens will begin to vest\n@param start the time (as Unix time) at which point vesting starts\n@param duration duration in seconds of the period in which the tokens will vest\n@param revocable whether the vesting is revocable or not",
									"id": 108,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1542:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"name": "start",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"name": "cliffDuration",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1586:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"name": "duration",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1613:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"name": "revocable",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1635:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 50,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1536:117:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1667:0:0"
									},
									"scope": 350,
									"src": "1525:452:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "2089:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 113,
													"name": "_beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2102:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 112,
												"id": 114,
												"nodeType": "Return",
												"src": "2095:19:0"
											}
										]
									},
									"documentation": "@return the beneficiary of the tokens.",
									"id": 116,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "beneficiary",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2080:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2079:9:0"
									},
									"scope": 350,
									"src": "2037:82:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2231:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 121,
													"name": "_cliff",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2244:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 120,
												"id": 122,
												"nodeType": "Return",
												"src": "2237:13:0"
											}
										]
									},
									"documentation": "@return the cliff time of the token vesting.",
									"id": 124,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "cliff",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2199:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2222:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2221:9:0"
									},
									"scope": 350,
									"src": "2185:70:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2367:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 129,
													"name": "_start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "2380:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 130,
												"nodeType": "Return",
												"src": "2373:13:0"
											}
										]
									},
									"documentation": "@return the start time of the token vesting.",
									"id": 132,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "start",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2335:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2358:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2357:9:0"
									},
									"scope": 350,
									"src": "2321:70:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "2504:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"name": "_duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "2517:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "2510:16:0"
											}
										]
									},
									"documentation": "@return the duration of the token vesting.",
									"id": 140,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "duration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2472:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "2495:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2494:9:0"
									},
									"scope": 350,
									"src": "2455:76:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "2641:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 145,
													"name": "_revocable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "2654:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 144,
												"id": 146,
												"nodeType": "Return",
												"src": "2647:17:0"
											}
										]
									},
									"documentation": "@return true if the vesting is revocable.",
									"id": 148,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "revocable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2612:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2635:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2634:6:0"
									},
									"scope": 350,
									"src": "2594:75:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2794:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "_released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2807:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 157,
													"indexExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2817:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2807:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 154,
												"id": 158,
												"nodeType": "Return",
												"src": "2800:23:0"
											}
										]
									},
									"documentation": "@return the amount of the token released.",
									"id": 160,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "released",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2750:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2749:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2784:9:0"
									},
									"scope": 350,
									"src": "2732:96:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2945:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "_revoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "2958:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 169,
													"indexExpression": {
														"argumentTypes": null,
														"id": 168,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "2967:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2958:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 166,
												"id": 170,
												"nodeType": "Return",
												"src": "2951:22:0"
											}
										]
									},
									"documentation": "@return true if the token is revoked.",
									"id": 172,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "revoked",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2904:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2903:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2939:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2938:6:0"
									},
									"scope": 350,
									"src": "2887:91:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "3137:240:0",
										"statements": [
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"name": "unreleased",
														"nodeType": "VariableDeclaration",
														"scope": 213,
														"src": "3143:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 177,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 182,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 180,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "3182:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														],
														"id": 179,
														"name": "_releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "3164:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$627_$returns$_t_uint256_$",
															"typeString": "function (contract IERC20) view returns (uint256)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3164:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3143:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 184,
																"name": "unreleased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "3203:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3216:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3203:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 732,
														"src": "3195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3195:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "3195:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 189,
															"name": "_released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "3225:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 191,
														"indexExpression": {
															"argumentTypes": null,
															"id": 190,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "3235:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3225:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 196,
																"name": "unreleased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "3265:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "_released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "3244:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 194,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 193,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "3254:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$627",
																		"typeString": "contract IERC20"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3244:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 456,
															"src": "3244:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3244:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3225:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "3225:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 203,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "3302:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 204,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "3316:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "3283:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 653,
														"src": "3283:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$627_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$627_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3283:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "3283:44:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 208,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "3354:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"id": 209,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "3361:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 207,
														"name": "TokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "3339:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3339:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "EmitStatement",
												"src": "3334:38:0"
											}
										]
									},
									"documentation": "@notice Transfers vested tokens to beneficiary.\n@param token ERC20 token which is being vested",
									"id": 213,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "release",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3116:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$627",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 173,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "3116:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$627",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3115:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3137:0:0"
									},
									"scope": 350,
									"src": "3099:278:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "3632:323:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 221,
															"name": "_revocable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "3646:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 732,
														"src": "3638:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3638:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "3638:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3671:16:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 225,
																	"name": "_revoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "3672:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 227,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 226,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3681:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$627",
																		"typeString": "contract IERC20"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3672:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 732,
														"src": "3663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3663:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "3663:25:0"
											},
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "3695:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 239,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 236,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "3737:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenVesting_$350",
																		"typeString": "contract TokenVesting"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenVesting_$350",
																		"typeString": "contract TokenVesting"
																	}
																],
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3729:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3729:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 572,
														"src": "3713:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:48:0"
											},
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"name": "unreleased",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "3750:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 243,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3789:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														],
														"id": 242,
														"name": "_releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "3771:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$627_$returns$_t_uint256_$",
															"typeString": "function (contract IERC20) view returns (uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3771:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3750:45:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"name": "refund",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "3801:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 250,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3830:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 248,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "3818:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 431,
														"src": "3818:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3801:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 253,
															"name": "_revoked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "3848:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 255,
														"indexExpression": {
															"argumentTypes": null,
															"id": 254,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3857:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3848:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3866:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3848:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "3848:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 262,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3896:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3896:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 264,
															"name": "refund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 259,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3877:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 653,
														"src": "3877:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$627_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$627_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3877:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "3877:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3944:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														],
														"id": 267,
														"name": "TokenVestingRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "3924:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3924:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "EmitStatement",
												"src": "3919:31:0"
											}
										]
									},
									"documentation": "@notice Allows the owner to revoke the vesting. Tokens already vested\nremain in the contract, the rest are returned to the owner.\n@param token ERC20 token which is being vested",
									"id": 272,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 218,
											"modifierName": {
												"argumentTypes": null,
												"id": 217,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 501,
												"src": "3622:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3622:9:0"
										}
									],
									"name": "revoke",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3601:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$627",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 214,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "3601:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$627",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3600:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3632:0:0"
									},
									"scope": 350,
									"src": "3585:370:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "4181:60:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 283,
																"name": "_released",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "4219:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 285,
															"indexExpression": {
																"argumentTypes": null,
																"id": 284,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "4229:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$627",
																	"typeString": "contract IERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4219:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 280,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "4208:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$627",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$627",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 279,
																"name": "_vestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "4194:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$627_$returns$_t_uint256_$",
																	"typeString": "function (contract IERC20) view returns (uint256)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4194:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 431,
														"src": "4194:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 278,
												"id": 287,
												"nodeType": "Return",
												"src": "4187:49:0"
											}
										]
									},
									"documentation": "@dev Calculates the amount that has already vested but hasn't been released yet.\n@param token ERC20 token which is being vested",
									"id": 289,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "_releasableAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "4136:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$627",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 273,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "4136:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$627",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4135:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "4172:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4171:9:0"
									},
									"scope": 350,
									"src": "4109:132:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "4434:374:0",
										"statements": [
											{
												"assignments": [
													297
												],
												"declarations": [
													{
														"constant": false,
														"id": 297,
														"name": "currentBalance",
														"nodeType": "VariableDeclaration",
														"scope": 349,
														"src": "4440:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 302,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 300,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "4481:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TokenVesting_$350",
																"typeString": "contract TokenVesting"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_TokenVesting_$350",
																"typeString": "contract TokenVesting"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 298,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "4465:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$627",
																"typeString": "contract IERC20"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 572,
														"src": "4465:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4465:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4440:46:0"
											},
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"name": "totalBalance",
														"nodeType": "VariableDeclaration",
														"scope": 349,
														"src": "4492:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4492:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 307,
																"name": "_released",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "4534:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 309,
															"indexExpression": {
																"argumentTypes": null,
																"id": 308,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "4544:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$627",
																	"typeString": "contract IERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4534:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 305,
															"name": "currentBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "4515:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 456,
														"src": "4515:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4492:59:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 312,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "4562:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4562:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 314,
														"name": "_cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "4580:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4562:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 319,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "4621:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4621:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 323,
																		"name": "_duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 31,
																		"src": "4651:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 321,
																		"name": "_start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "4640:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 456,
																	"src": "4640:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4640:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4621:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 326,
																"name": "_revoked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "4665:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 328,
															"indexExpression": {
																"argumentTypes": null,
																"id": 327,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "4674:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$627",
																	"typeString": "contract IERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4665:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4621:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 345,
														"nodeType": "Block",
														"src": "4722:82:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 342,
																			"name": "_duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 31,
																			"src": "4787:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 338,
																							"name": "_start",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 29,
																							"src": "4774:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 335,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 719,
																								"src": "4754:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 336,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "4754:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 337,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 431,
																						"src": "4754:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 339,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4754:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 333,
																					"name": "totalBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 304,
																					"src": "4737:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 385,
																				"src": "4737:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4737:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "4737:49:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4737:60:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 295,
																"id": 344,
																"nodeType": "Return",
																"src": "4730:67:0"
															}
														]
													},
													"id": 346,
													"nodeType": "IfStatement",
													"src": "4617:187:0",
													"trueBody": {
														"id": 332,
														"nodeType": "Block",
														"src": "4682:34:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 330,
																	"name": "totalBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "4697:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 295,
																"id": 331,
																"nodeType": "Return",
																"src": "4690:19:0"
															}
														]
													}
												},
												"id": 347,
												"nodeType": "IfStatement",
												"src": "4558:246:0",
												"trueBody": {
													"id": 318,
													"nodeType": "Block",
													"src": "4588:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4603:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 295,
															"id": 317,
															"nodeType": "Return",
															"src": "4596:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Calculates the amount that has already vested.\n@param token ERC20 token which is being vested",
									"id": 349,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "_vestedAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "4389:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$627",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 290,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "4389:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$627",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4388:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "4425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4424:9:0"
									},
									"scope": 350,
									"src": "4366:442:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 351,
							"src": "414:4396:0"
						}
					],
					"src": "48:4763:0"
				},
				"id": 0
			},
			"contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							457
						]
					},
					"id": 458,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 352,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "119:153:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 361,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "134:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "139:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "134:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 366,
												"nodeType": "IfStatement",
												"src": "130:20:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "149:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 360,
													"id": 365,
													"nodeType": "Return",
													"src": "142:8:1"
												}
											},
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "161:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "161:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 372,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 369,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "173:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 370,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "177:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "173:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "161:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 374,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "197:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 375,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "201:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "197:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 377,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "206:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "197:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "209:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "189:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "189:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "189:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 382,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 368,
													"src": "263:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 360,
												"id": 383,
												"nodeType": "Return",
												"src": "256:8:1"
											}
										]
									},
									"documentation": null,
									"id": 385,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "65:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "76:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "64:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "110:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "109:9:1"
									},
									"scope": 457,
									"src": "52:220:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "347:110:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 395,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "366:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "370:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "366:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "373:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "358:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "358:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "358:44:1"
											},
											{
												"assignments": [
													402
												],
												"declarations": [
													{
														"constant": false,
														"id": 402,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "413:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "413:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 403,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "425:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 404,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "429:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "425:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "413:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 407,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 402,
													"src": "448:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 408,
												"nodeType": "Return",
												"src": "441:8:1"
											}
										]
									},
									"documentation": null,
									"id": 410,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "293:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "304:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "292:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "337:9:1"
									},
									"scope": 457,
									"src": "280:177:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "532:91:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 420,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "551:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 421,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "556:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "551:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "559:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "543:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "543:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "543:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 426,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "610:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 427,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "614:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "610:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 429,
												"nodeType": "Return",
												"src": "603:12:1"
											}
										]
									},
									"documentation": null,
									"id": 431,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "477:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "522:9:1"
									},
									"scope": 457,
									"src": "465:158:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "698:112:1",
										"statements": [
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "709:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "709:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 442,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "721:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 443,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "725:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "721:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "709:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 447,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "745:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 448,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "750:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "745:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "753:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "737:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "737:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "737:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 453,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 441,
													"src": "801:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 454,
												"nodeType": "Return",
												"src": "794:8:1"
											}
										]
									},
									"documentation": null,
									"id": 456,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "644:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "655:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "689:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:9:1"
									},
									"scope": 457,
									"src": "631:179:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 458,
							"src": "28:785:1"
						}
					],
					"src": "0:815:1"
				},
				"id": 1
			},
			"contracts/ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/ownership/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							558
						]
					},
					"id": 559,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 558,
							"linearizedBaseContracts": [
								558
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 461,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 558,
									"src": "52:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 460,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "52:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 467,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "110:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "141:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "141:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "109:57:2"
									},
									"src": "83:84:2"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "196:94:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 470,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "207:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 471,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "216:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "216:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "207:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "207:19:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "271:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "263:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "263:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "275:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 475,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "242:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "242:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "237:45:2"
											}
										]
									},
									"documentation": null,
									"id": 483,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:0:2"
									},
									"scope": 558,
									"src": "175:115:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "345:32:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 488,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 461,
													"src": "363:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 487,
												"id": 489,
												"nodeType": "Return",
												"src": "356:13:2"
											}
										]
									},
									"documentation": null,
									"id": 491,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "336:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "335:9:2"
									},
									"scope": 558,
									"src": "298:79:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "406:85:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 494,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "425:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "425:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "436:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "417:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "417:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "417:54:2"
											},
											{
												"id": 499,
												"nodeType": "PlaceholderStatement",
												"src": "482:1:2"
											}
										]
									},
									"documentation": null,
									"id": 501,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:2"
									},
									"src": "385:106:2",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "545:46:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 506,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "563:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "563:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 508,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "577:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "563:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 505,
												"id": 510,
												"nodeType": "Return",
												"src": "556:27:2"
											}
										]
									},
									"documentation": null,
									"id": 512,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "539:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:6:2"
									},
									"scope": 558,
									"src": "499:92:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "645:94:2",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 518,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "682:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "698:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "690:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "690:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 517,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "661:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "661:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "EmitStatement",
												"src": "656:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 524,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "712:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "729:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "721:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "721:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "712:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "712:19:2"
											}
										]
									},
									"documentation": null,
									"id": 531,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 515,
											"modifierName": {
												"argumentTypes": null,
												"id": 514,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 501,
												"src": "635:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "635:9:2"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "625:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:2"
									},
									"scope": 558,
									"src": "599:140:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "809:174:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 539,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "828:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "848:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "840:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "840:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "828:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "852:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "820:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "820:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "820:73:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 548,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "930:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 549,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "938:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 547,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "909:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "904:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 552,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "958:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 553,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "967:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "958:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "958:17:2"
											}
										]
									},
									"documentation": null,
									"id": 557,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 536,
											"modifierName": {
												"argumentTypes": null,
												"id": 535,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 501,
												"src": "799:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "799:9:2"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "774:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "773:18:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:0:2"
									},
									"scope": 558,
									"src": "747:236:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 559,
							"src": "28:958:2"
						}
					],
					"src": "0:988:2"
				},
				"id": 2
			},
			"contracts/token/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							627
						]
					},
					"id": 628,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 560,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 627,
							"linearizedBaseContracts": [
								627
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 565,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "98:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "98:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "97:9:3"
									},
									"scope": 627,
									"src": "52:55:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 572,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "138:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "137:17:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "178:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "177:9:3"
									},
									"scope": 627,
									"src": "119:68:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 581,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "217:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "236:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "216:35:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "270:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "270:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "269:6:3"
									},
									"scope": 627,
									"src": "199:77:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 590,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "307:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "322:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "306:32:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "362:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "361:9:3"
									},
									"scope": 627,
									"src": "288:83:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 599,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "417:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:33:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "451:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "451:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "450:6:3"
									},
									"scope": 627,
									"src": "383:74:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 610,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "491:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "507:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "526:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "490:51:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "560:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "559:6:3"
									},
									"scope": 627,
									"src": "469:97:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 618,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "589:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "611:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "631:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "588:57:3"
									},
									"src": "574:72:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 626,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "667:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "690:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "715:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:63:3"
									},
									"src": "652:78:3"
								}
							],
							"scope": 628,
							"src": "28:705:3"
						}
					],
					"src": "0:735:3"
				},
				"id": 3
			},
			"contracts/token/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							714
						]
					},
					"id": 715,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 629,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"absolutePath": "contracts/token/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 630,
							"nodeType": "ImportDirective",
							"scope": 715,
							"sourceUnit": 628,
							"src": "28:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/math/SafeMath.sol",
							"file": "../math/SafeMath.sol",
							"id": 631,
							"nodeType": "ImportDirective",
							"scope": 715,
							"sourceUnit": 458,
							"src": "52:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 714,
							"linearizedBaseContracts": [
								714
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 634,
									"libraryName": {
										"contractScope": null,
										"id": 632,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 457,
										"src": "117:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$457",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "111:27:4",
									"typeName": {
										"id": 633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "130:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "218:83:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 646,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "252:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 647,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "256:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 644,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "237:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$627",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 581,
																"src": "237:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "237:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a207472616e73666572206661696c6564",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "264:28:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b184e24e4c15f4cad7cea6ae59afd2ef81db03ac0218a99d0821a880bc0fa166",
																"typeString": "literal_string \"SafeERC20: transfer failed\""
															},
															"value": "SafeERC20: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b184e24e4c15f4cad7cea6ae59afd2ef81db03ac0218a99d0821a880bc0fa166",
																"typeString": "literal_string \"SafeERC20: transfer failed\""
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "229:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "229:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "229:64:4"
											}
										]
									},
									"documentation": null,
									"id": 653,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "168:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$627",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 635,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "168:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$627",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "182:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "194:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "167:41:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:4"
									},
									"scope": 714,
									"src": "146:155:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "399:97:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 667,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "437:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 668,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "443:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "447:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 665,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "418:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$627",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 610,
																"src": "418:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "418:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a207472616e7366657246726f6d206661696c6564",
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "455:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b51b04c39f259613eb3eb4bab108e8bb4adb4a4a960aedc5a547c82b99c50ab",
																"typeString": "literal_string \"SafeERC20: transferFrom failed\""
															},
															"value": "SafeERC20: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b51b04c39f259613eb3eb4bab108e8bb4adb4a4a960aedc5a547c82b99c50ab",
																"typeString": "literal_string \"SafeERC20: transferFrom failed\""
															}
														],
														"id": 664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "410:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "410:78:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "410:78:4"
											}
										]
									},
									"documentation": null,
									"id": 675,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "335:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$627",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 654,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "335:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$627",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "349:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "363:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "375:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "334:55:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:0:4"
									},
									"scope": 714,
									"src": "309:187:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "580:249:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 685,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "600:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "609:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "600:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 688,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "599:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 692,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 748,
																							"src": "640:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$714",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$714",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 691,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "632:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "632:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 694,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 679,
																					"src": "647:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 689,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 677,
																					"src": "616:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$627",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 590,
																				"src": "616:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "616:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "659:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "616:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 698,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "615:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "599:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "676:56:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "591:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "591:152:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "591:152:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 706,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "776:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "785:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 704,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "762:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$627",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 599,
																"src": "762:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "762:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f7665206661696c6564",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "793:27:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a51bcedb969fd9608b0b5861242fed76a773862249ad7d896b783ead2c1f930",
																"typeString": "literal_string \"SafeERC20: approve failed\""
															},
															"value": "SafeERC20: approve failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a51bcedb969fd9608b0b5861242fed76a773862249ad7d896b783ead2c1f930",
																"typeString": "literal_string \"SafeERC20: approve failed\""
															}
														],
														"id": 703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															733
														],
														"referencedDeclaration": 733,
														"src": "754:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "754:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "754:67:4"
											}
										]
									},
									"documentation": null,
									"id": 713,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "525:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$627",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 676,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "525:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$627",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "539:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "556:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "524:46:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "580:0:4"
									},
									"scope": 714,
									"src": "504:325:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 715,
							"src": "86:746:4"
						}
					],
					"src": "0:834:4"
				},
				"id": 4
			}
		}
	}
}